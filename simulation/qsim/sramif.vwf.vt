// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "03/14/2023 04:42:34"
                                                                        
// Verilog Self-Checking Test Bench (with test vectors) for design :    sramif
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module sramif_vlg_sample_tst(
	ABUS,
	DBUS,
	LEN,
	RD,
	WR,
	sampler_tx
);
input [31:0] ABUS;
input [31:0] DBUS;
input [1:0] LEN;
input  RD;
input  WR;
output sampler_tx;

reg sample;
time current_time;
always @(ABUS or DBUS or LEN or RD or WR)
                                                                                
begin                                                 
 if ($realtime > 0)                                   
 begin                                                
	if ($realtime == 0 || $realtime != current_time)  
	begin									          
		if (sample === 1'bx)                          
			sample = 0;                               
		else                                          
			sample = ~sample;                         
	end										          
	current_time = $realtime;					      
 end                                                  
end                                                   

assign sampler_tx = sample;
endmodule

module sramif_vlg_check_tst (
	address,
	byteena,
	data,
	rdd,
	rden,
	shft8,
	shft16,
	wren,
	sampler_rx
);
input [12:0] address;
input [3:0] byteena;
input [31:0] data;
input  rdd;
input  rden;
input  shft8;
input  shft16;
input  wren;
input sampler_rx;

reg [12:0] address_expected;
reg [3:0] byteena_expected;
reg [31:0] data_expected;
reg  rdd_expected;
reg  rden_expected;
reg  shft8_expected;
reg  shft16_expected;
reg  wren_expected;

reg [12:0] address_prev;
reg [3:0] byteena_prev;
reg [31:0] data_prev;
reg  rdd_prev;
reg  rden_prev;
reg  shft8_prev;
reg  shft16_prev;
reg  wren_prev;

reg [12:0] address_expected_prev;
reg [3:0] byteena_expected_prev;
reg [31:0] data_expected_prev;
reg  rden_expected_prev;
reg  shft8_expected_prev;
reg  shft16_expected_prev;
reg  wren_expected_prev;

reg [12:0] last_address_exp;
reg [3:0] last_byteena_exp;
reg [31:0] last_data_exp;
reg  last_rden_exp;
reg  last_shft8_exp;
reg  last_shft16_exp;
reg  last_wren_exp;

reg trigger;

integer i;
integer nummismatches;

reg [1:8] on_first_change ;


initial
begin
trigger = 0;
i = 0;
nummismatches = 0;
on_first_change = 8'b1;
end

// update real /o prevs

always @(trigger)
begin
	address_prev = address;
	byteena_prev = byteena;
	data_prev = data;
	rdd_prev = rdd;
	rden_prev = rden;
	shft8_prev = shft8;
	shft16_prev = shft16;
	wren_prev = wren;
end

// update expected /o prevs

always @(trigger)
begin
	address_expected_prev = address_expected;
	byteena_expected_prev = byteena_expected;
	data_expected_prev = data_expected;
	rden_expected_prev = rden_expected;
	shft8_expected_prev = shft8_expected;
	shft16_expected_prev = shft16_expected;
	wren_expected_prev = wren_expected;
end


// expected address[ 12 ]
initial
begin
	address_expected[12] = 1'bX;
end 
// expected address[ 11 ]
initial
begin
	address_expected[11] = 1'bX;
end 
// expected address[ 10 ]
initial
begin
	address_expected[10] = 1'bX;
end 
// expected address[ 9 ]
initial
begin
	address_expected[9] = 1'bX;
end 
// expected address[ 8 ]
initial
begin
	address_expected[8] = 1'bX;
end 
// expected address[ 7 ]
initial
begin
	address_expected[7] = 1'bX;
end 
// expected address[ 6 ]
initial
begin
	address_expected[6] = 1'bX;
end 
// expected address[ 5 ]
initial
begin
	address_expected[5] = 1'bX;
end 
// expected address[ 4 ]
initial
begin
	address_expected[4] = 1'bX;
end 
// expected address[ 3 ]
initial
begin
	address_expected[3] = 1'bX;
end 
// expected address[ 2 ]
initial
begin
	address_expected[2] = 1'bX;
end 
// expected address[ 1 ]
initial
begin
	address_expected[1] = 1'bX;
end 
// expected address[ 0 ]
initial
begin
	address_expected[0] = 1'bX;
end 
// expected byteena[ 3 ]
initial
begin
	byteena_expected[3] = 1'bX;
end 
// expected byteena[ 2 ]
initial
begin
	byteena_expected[2] = 1'bX;
end 
// expected byteena[ 1 ]
initial
begin
	byteena_expected[1] = 1'bX;
end 
// expected byteena[ 0 ]
initial
begin
	byteena_expected[0] = 1'bX;
end 
// expected data[ 31 ]
initial
begin
	data_expected[31] = 1'bX;
end 
// expected data[ 30 ]
initial
begin
	data_expected[30] = 1'bX;
end 
// expected data[ 29 ]
initial
begin
	data_expected[29] = 1'bX;
end 
// expected data[ 28 ]
initial
begin
	data_expected[28] = 1'bX;
end 
// expected data[ 27 ]
initial
begin
	data_expected[27] = 1'bX;
end 
// expected data[ 26 ]
initial
begin
	data_expected[26] = 1'bX;
end 
// expected data[ 25 ]
initial
begin
	data_expected[25] = 1'bX;
end 
// expected data[ 24 ]
initial
begin
	data_expected[24] = 1'bX;
end 
// expected data[ 23 ]
initial
begin
	data_expected[23] = 1'bX;
end 
// expected data[ 22 ]
initial
begin
	data_expected[22] = 1'bX;
end 
// expected data[ 21 ]
initial
begin
	data_expected[21] = 1'bX;
end 
// expected data[ 20 ]
initial
begin
	data_expected[20] = 1'bX;
end 
// expected data[ 19 ]
initial
begin
	data_expected[19] = 1'bX;
end 
// expected data[ 18 ]
initial
begin
	data_expected[18] = 1'bX;
end 
// expected data[ 17 ]
initial
begin
	data_expected[17] = 1'bX;
end 
// expected data[ 16 ]
initial
begin
	data_expected[16] = 1'bX;
end 
// expected data[ 15 ]
initial
begin
	data_expected[15] = 1'bX;
end 
// expected data[ 14 ]
initial
begin
	data_expected[14] = 1'bX;
end 
// expected data[ 13 ]
initial
begin
	data_expected[13] = 1'bX;
end 
// expected data[ 12 ]
initial
begin
	data_expected[12] = 1'bX;
end 
// expected data[ 11 ]
initial
begin
	data_expected[11] = 1'bX;
end 
// expected data[ 10 ]
initial
begin
	data_expected[10] = 1'bX;
end 
// expected data[ 9 ]
initial
begin
	data_expected[9] = 1'bX;
end 
// expected data[ 8 ]
initial
begin
	data_expected[8] = 1'bX;
end 
// expected data[ 7 ]
initial
begin
	data_expected[7] = 1'bX;
end 
// expected data[ 6 ]
initial
begin
	data_expected[6] = 1'bX;
end 
// expected data[ 5 ]
initial
begin
	data_expected[5] = 1'bX;
end 
// expected data[ 4 ]
initial
begin
	data_expected[4] = 1'bX;
end 
// expected data[ 3 ]
initial
begin
	data_expected[3] = 1'bX;
end 
// expected data[ 2 ]
initial
begin
	data_expected[2] = 1'bX;
end 
// expected data[ 1 ]
initial
begin
	data_expected[1] = 1'bX;
end 
// expected data[ 0 ]
initial
begin
	data_expected[0] = 1'bX;
end 

// expected rden
initial
begin
	rden_expected = 1'bX;
end 

// expected shft8
initial
begin
	shft8_expected = 1'bX;
end 

// expected shft16
initial
begin
	shft16_expected = 1'bX;
end 

// expected wren
initial
begin
	wren_expected = 1'bX;
end 
// generate trigger
always @(address_expected or address or byteena_expected or byteena or data_expected or data or rdd_expected or rdd or rden_expected or rden or shft8_expected or shft8 or shft16_expected or shft16 or wren_expected or wren)
begin
	trigger <= ~trigger;
end

always @(posedge sampler_rx or negedge sampler_rx)
begin
`ifdef debug_tbench
	$display("Scanning pattern %d @time = %t",i,$realtime );
	i = i + 1;
	$display("| expected address = %b | expected byteena = %b | expected data = %b | expected rdd = %b | expected rden = %b | expected shft8 = %b | expected shft16 = %b | expected wren = %b | ",address_expected_prev,byteena_expected_prev,data_expected_prev,rdd_expected_prev,rden_expected_prev,shft8_expected_prev,shft16_expected_prev,wren_expected_prev);
	$display("| real address = %b | real byteena = %b | real data = %b | real rdd = %b | real rden = %b | real shft8 = %b | real shft16 = %b | real wren = %b | ",address_prev,byteena_prev,data_prev,rdd_prev,rden_prev,shft8_prev,shft16_prev,wren_prev);
`endif
	if (
		( address_expected_prev[0] !== 1'bx ) && ( address_prev[0] !== address_expected_prev[0] )
		&& ((address_expected_prev[0] !== last_address_exp[0]) ||
			on_first_change[1])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port address[0] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", address_expected_prev);
		$display ("     Real value = %b", address_prev);
		nummismatches = nummismatches + 1;
		on_first_change[1] = 1'b0;
		last_address_exp[0] = address_expected_prev[0];
	end
	if (
		( address_expected_prev[1] !== 1'bx ) && ( address_prev[1] !== address_expected_prev[1] )
		&& ((address_expected_prev[1] !== last_address_exp[1]) ||
			on_first_change[1])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port address[1] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", address_expected_prev);
		$display ("     Real value = %b", address_prev);
		nummismatches = nummismatches + 1;
		on_first_change[1] = 1'b0;
		last_address_exp[1] = address_expected_prev[1];
	end
	if (
		( address_expected_prev[2] !== 1'bx ) && ( address_prev[2] !== address_expected_prev[2] )
		&& ((address_expected_prev[2] !== last_address_exp[2]) ||
			on_first_change[1])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port address[2] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", address_expected_prev);
		$display ("     Real value = %b", address_prev);
		nummismatches = nummismatches + 1;
		on_first_change[1] = 1'b0;
		last_address_exp[2] = address_expected_prev[2];
	end
	if (
		( address_expected_prev[3] !== 1'bx ) && ( address_prev[3] !== address_expected_prev[3] )
		&& ((address_expected_prev[3] !== last_address_exp[3]) ||
			on_first_change[1])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port address[3] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", address_expected_prev);
		$display ("     Real value = %b", address_prev);
		nummismatches = nummismatches + 1;
		on_first_change[1] = 1'b0;
		last_address_exp[3] = address_expected_prev[3];
	end
	if (
		( address_expected_prev[4] !== 1'bx ) && ( address_prev[4] !== address_expected_prev[4] )
		&& ((address_expected_prev[4] !== last_address_exp[4]) ||
			on_first_change[1])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port address[4] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", address_expected_prev);
		$display ("     Real value = %b", address_prev);
		nummismatches = nummismatches + 1;
		on_first_change[1] = 1'b0;
		last_address_exp[4] = address_expected_prev[4];
	end
	if (
		( address_expected_prev[5] !== 1'bx ) && ( address_prev[5] !== address_expected_prev[5] )
		&& ((address_expected_prev[5] !== last_address_exp[5]) ||
			on_first_change[1])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port address[5] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", address_expected_prev);
		$display ("     Real value = %b", address_prev);
		nummismatches = nummismatches + 1;
		on_first_change[1] = 1'b0;
		last_address_exp[5] = address_expected_prev[5];
	end
	if (
		( address_expected_prev[6] !== 1'bx ) && ( address_prev[6] !== address_expected_prev[6] )
		&& ((address_expected_prev[6] !== last_address_exp[6]) ||
			on_first_change[1])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port address[6] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", address_expected_prev);
		$display ("     Real value = %b", address_prev);
		nummismatches = nummismatches + 1;
		on_first_change[1] = 1'b0;
		last_address_exp[6] = address_expected_prev[6];
	end
	if (
		( address_expected_prev[7] !== 1'bx ) && ( address_prev[7] !== address_expected_prev[7] )
		&& ((address_expected_prev[7] !== last_address_exp[7]) ||
			on_first_change[1])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port address[7] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", address_expected_prev);
		$display ("     Real value = %b", address_prev);
		nummismatches = nummismatches + 1;
		on_first_change[1] = 1'b0;
		last_address_exp[7] = address_expected_prev[7];
	end
	if (
		( address_expected_prev[8] !== 1'bx ) && ( address_prev[8] !== address_expected_prev[8] )
		&& ((address_expected_prev[8] !== last_address_exp[8]) ||
			on_first_change[1])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port address[8] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", address_expected_prev);
		$display ("     Real value = %b", address_prev);
		nummismatches = nummismatches + 1;
		on_first_change[1] = 1'b0;
		last_address_exp[8] = address_expected_prev[8];
	end
	if (
		( address_expected_prev[9] !== 1'bx ) && ( address_prev[9] !== address_expected_prev[9] )
		&& ((address_expected_prev[9] !== last_address_exp[9]) ||
			on_first_change[1])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port address[9] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", address_expected_prev);
		$display ("     Real value = %b", address_prev);
		nummismatches = nummismatches + 1;
		on_first_change[1] = 1'b0;
		last_address_exp[9] = address_expected_prev[9];
	end
	if (
		( address_expected_prev[10] !== 1'bx ) && ( address_prev[10] !== address_expected_prev[10] )
		&& ((address_expected_prev[10] !== last_address_exp[10]) ||
			on_first_change[1])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port address[10] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", address_expected_prev);
		$display ("     Real value = %b", address_prev);
		nummismatches = nummismatches + 1;
		on_first_change[1] = 1'b0;
		last_address_exp[10] = address_expected_prev[10];
	end
	if (
		( address_expected_prev[11] !== 1'bx ) && ( address_prev[11] !== address_expected_prev[11] )
		&& ((address_expected_prev[11] !== last_address_exp[11]) ||
			on_first_change[1])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port address[11] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", address_expected_prev);
		$display ("     Real value = %b", address_prev);
		nummismatches = nummismatches + 1;
		on_first_change[1] = 1'b0;
		last_address_exp[11] = address_expected_prev[11];
	end
	if (
		( address_expected_prev[12] !== 1'bx ) && ( address_prev[12] !== address_expected_prev[12] )
		&& ((address_expected_prev[12] !== last_address_exp[12]) ||
			on_first_change[1])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port address[12] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", address_expected_prev);
		$display ("     Real value = %b", address_prev);
		nummismatches = nummismatches + 1;
		on_first_change[1] = 1'b0;
		last_address_exp[12] = address_expected_prev[12];
	end
	if (
		( byteena_expected_prev[0] !== 1'bx ) && ( byteena_prev[0] !== byteena_expected_prev[0] )
		&& ((byteena_expected_prev[0] !== last_byteena_exp[0]) ||
			on_first_change[2])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port byteena[0] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", byteena_expected_prev);
		$display ("     Real value = %b", byteena_prev);
		nummismatches = nummismatches + 1;
		on_first_change[2] = 1'b0;
		last_byteena_exp[0] = byteena_expected_prev[0];
	end
	if (
		( byteena_expected_prev[1] !== 1'bx ) && ( byteena_prev[1] !== byteena_expected_prev[1] )
		&& ((byteena_expected_prev[1] !== last_byteena_exp[1]) ||
			on_first_change[2])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port byteena[1] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", byteena_expected_prev);
		$display ("     Real value = %b", byteena_prev);
		nummismatches = nummismatches + 1;
		on_first_change[2] = 1'b0;
		last_byteena_exp[1] = byteena_expected_prev[1];
	end
	if (
		( byteena_expected_prev[2] !== 1'bx ) && ( byteena_prev[2] !== byteena_expected_prev[2] )
		&& ((byteena_expected_prev[2] !== last_byteena_exp[2]) ||
			on_first_change[2])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port byteena[2] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", byteena_expected_prev);
		$display ("     Real value = %b", byteena_prev);
		nummismatches = nummismatches + 1;
		on_first_change[2] = 1'b0;
		last_byteena_exp[2] = byteena_expected_prev[2];
	end
	if (
		( byteena_expected_prev[3] !== 1'bx ) && ( byteena_prev[3] !== byteena_expected_prev[3] )
		&& ((byteena_expected_prev[3] !== last_byteena_exp[3]) ||
			on_first_change[2])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port byteena[3] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", byteena_expected_prev);
		$display ("     Real value = %b", byteena_prev);
		nummismatches = nummismatches + 1;
		on_first_change[2] = 1'b0;
		last_byteena_exp[3] = byteena_expected_prev[3];
	end
	if (
		( data_expected_prev[0] !== 1'bx ) && ( data_prev[0] !== data_expected_prev[0] )
		&& ((data_expected_prev[0] !== last_data_exp[0]) ||
			on_first_change[3])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port data[0] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", data_expected_prev);
		$display ("     Real value = %b", data_prev);
		nummismatches = nummismatches + 1;
		on_first_change[3] = 1'b0;
		last_data_exp[0] = data_expected_prev[0];
	end
	if (
		( data_expected_prev[1] !== 1'bx ) && ( data_prev[1] !== data_expected_prev[1] )
		&& ((data_expected_prev[1] !== last_data_exp[1]) ||
			on_first_change[3])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port data[1] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", data_expected_prev);
		$display ("     Real value = %b", data_prev);
		nummismatches = nummismatches + 1;
		on_first_change[3] = 1'b0;
		last_data_exp[1] = data_expected_prev[1];
	end
	if (
		( data_expected_prev[2] !== 1'bx ) && ( data_prev[2] !== data_expected_prev[2] )
		&& ((data_expected_prev[2] !== last_data_exp[2]) ||
			on_first_change[3])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port data[2] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", data_expected_prev);
		$display ("     Real value = %b", data_prev);
		nummismatches = nummismatches + 1;
		on_first_change[3] = 1'b0;
		last_data_exp[2] = data_expected_prev[2];
	end
	if (
		( data_expected_prev[3] !== 1'bx ) && ( data_prev[3] !== data_expected_prev[3] )
		&& ((data_expected_prev[3] !== last_data_exp[3]) ||
			on_first_change[3])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port data[3] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", data_expected_prev);
		$display ("     Real value = %b", data_prev);
		nummismatches = nummismatches + 1;
		on_first_change[3] = 1'b0;
		last_data_exp[3] = data_expected_prev[3];
	end
	if (
		( data_expected_prev[4] !== 1'bx ) && ( data_prev[4] !== data_expected_prev[4] )
		&& ((data_expected_prev[4] !== last_data_exp[4]) ||
			on_first_change[3])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port data[4] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", data_expected_prev);
		$display ("     Real value = %b", data_prev);
		nummismatches = nummismatches + 1;
		on_first_change[3] = 1'b0;
		last_data_exp[4] = data_expected_prev[4];
	end
	if (
		( data_expected_prev[5] !== 1'bx ) && ( data_prev[5] !== data_expected_prev[5] )
		&& ((data_expected_prev[5] !== last_data_exp[5]) ||
			on_first_change[3])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port data[5] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", data_expected_prev);
		$display ("     Real value = %b", data_prev);
		nummismatches = nummismatches + 1;
		on_first_change[3] = 1'b0;
		last_data_exp[5] = data_expected_prev[5];
	end
	if (
		( data_expected_prev[6] !== 1'bx ) && ( data_prev[6] !== data_expected_prev[6] )
		&& ((data_expected_prev[6] !== last_data_exp[6]) ||
			on_first_change[3])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port data[6] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", data_expected_prev);
		$display ("     Real value = %b", data_prev);
		nummismatches = nummismatches + 1;
		on_first_change[3] = 1'b0;
		last_data_exp[6] = data_expected_prev[6];
	end
	if (
		( data_expected_prev[7] !== 1'bx ) && ( data_prev[7] !== data_expected_prev[7] )
		&& ((data_expected_prev[7] !== last_data_exp[7]) ||
			on_first_change[3])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port data[7] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", data_expected_prev);
		$display ("     Real value = %b", data_prev);
		nummismatches = nummismatches + 1;
		on_first_change[3] = 1'b0;
		last_data_exp[7] = data_expected_prev[7];
	end
	if (
		( data_expected_prev[8] !== 1'bx ) && ( data_prev[8] !== data_expected_prev[8] )
		&& ((data_expected_prev[8] !== last_data_exp[8]) ||
			on_first_change[3])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port data[8] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", data_expected_prev);
		$display ("     Real value = %b", data_prev);
		nummismatches = nummismatches + 1;
		on_first_change[3] = 1'b0;
		last_data_exp[8] = data_expected_prev[8];
	end
	if (
		( data_expected_prev[9] !== 1'bx ) && ( data_prev[9] !== data_expected_prev[9] )
		&& ((data_expected_prev[9] !== last_data_exp[9]) ||
			on_first_change[3])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port data[9] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", data_expected_prev);
		$display ("     Real value = %b", data_prev);
		nummismatches = nummismatches + 1;
		on_first_change[3] = 1'b0;
		last_data_exp[9] = data_expected_prev[9];
	end
	if (
		( data_expected_prev[10] !== 1'bx ) && ( data_prev[10] !== data_expected_prev[10] )
		&& ((data_expected_prev[10] !== last_data_exp[10]) ||
			on_first_change[3])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port data[10] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", data_expected_prev);
		$display ("     Real value = %b", data_prev);
		nummismatches = nummismatches + 1;
		on_first_change[3] = 1'b0;
		last_data_exp[10] = data_expected_prev[10];
	end
	if (
		( data_expected_prev[11] !== 1'bx ) && ( data_prev[11] !== data_expected_prev[11] )
		&& ((data_expected_prev[11] !== last_data_exp[11]) ||
			on_first_change[3])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port data[11] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", data_expected_prev);
		$display ("     Real value = %b", data_prev);
		nummismatches = nummismatches + 1;
		on_first_change[3] = 1'b0;
		last_data_exp[11] = data_expected_prev[11];
	end
	if (
		( data_expected_prev[12] !== 1'bx ) && ( data_prev[12] !== data_expected_prev[12] )
		&& ((data_expected_prev[12] !== last_data_exp[12]) ||
			on_first_change[3])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port data[12] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", data_expected_prev);
		$display ("     Real value = %b", data_prev);
		nummismatches = nummismatches + 1;
		on_first_change[3] = 1'b0;
		last_data_exp[12] = data_expected_prev[12];
	end
	if (
		( data_expected_prev[13] !== 1'bx ) && ( data_prev[13] !== data_expected_prev[13] )
		&& ((data_expected_prev[13] !== last_data_exp[13]) ||
			on_first_change[3])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port data[13] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", data_expected_prev);
		$display ("     Real value = %b", data_prev);
		nummismatches = nummismatches + 1;
		on_first_change[3] = 1'b0;
		last_data_exp[13] = data_expected_prev[13];
	end
	if (
		( data_expected_prev[14] !== 1'bx ) && ( data_prev[14] !== data_expected_prev[14] )
		&& ((data_expected_prev[14] !== last_data_exp[14]) ||
			on_first_change[3])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port data[14] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", data_expected_prev);
		$display ("     Real value = %b", data_prev);
		nummismatches = nummismatches + 1;
		on_first_change[3] = 1'b0;
		last_data_exp[14] = data_expected_prev[14];
	end
	if (
		( data_expected_prev[15] !== 1'bx ) && ( data_prev[15] !== data_expected_prev[15] )
		&& ((data_expected_prev[15] !== last_data_exp[15]) ||
			on_first_change[3])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port data[15] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", data_expected_prev);
		$display ("     Real value = %b", data_prev);
		nummismatches = nummismatches + 1;
		on_first_change[3] = 1'b0;
		last_data_exp[15] = data_expected_prev[15];
	end
	if (
		( data_expected_prev[16] !== 1'bx ) && ( data_prev[16] !== data_expected_prev[16] )
		&& ((data_expected_prev[16] !== last_data_exp[16]) ||
			on_first_change[3])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port data[16] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", data_expected_prev);
		$display ("     Real value = %b", data_prev);
		nummismatches = nummismatches + 1;
		on_first_change[3] = 1'b0;
		last_data_exp[16] = data_expected_prev[16];
	end
	if (
		( data_expected_prev[17] !== 1'bx ) && ( data_prev[17] !== data_expected_prev[17] )
		&& ((data_expected_prev[17] !== last_data_exp[17]) ||
			on_first_change[3])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port data[17] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", data_expected_prev);
		$display ("     Real value = %b", data_prev);
		nummismatches = nummismatches + 1;
		on_first_change[3] = 1'b0;
		last_data_exp[17] = data_expected_prev[17];
	end
	if (
		( data_expected_prev[18] !== 1'bx ) && ( data_prev[18] !== data_expected_prev[18] )
		&& ((data_expected_prev[18] !== last_data_exp[18]) ||
			on_first_change[3])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port data[18] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", data_expected_prev);
		$display ("     Real value = %b", data_prev);
		nummismatches = nummismatches + 1;
		on_first_change[3] = 1'b0;
		last_data_exp[18] = data_expected_prev[18];
	end
	if (
		( data_expected_prev[19] !== 1'bx ) && ( data_prev[19] !== data_expected_prev[19] )
		&& ((data_expected_prev[19] !== last_data_exp[19]) ||
			on_first_change[3])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port data[19] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", data_expected_prev);
		$display ("     Real value = %b", data_prev);
		nummismatches = nummismatches + 1;
		on_first_change[3] = 1'b0;
		last_data_exp[19] = data_expected_prev[19];
	end
	if (
		( data_expected_prev[20] !== 1'bx ) && ( data_prev[20] !== data_expected_prev[20] )
		&& ((data_expected_prev[20] !== last_data_exp[20]) ||
			on_first_change[3])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port data[20] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", data_expected_prev);
		$display ("     Real value = %b", data_prev);
		nummismatches = nummismatches + 1;
		on_first_change[3] = 1'b0;
		last_data_exp[20] = data_expected_prev[20];
	end
	if (
		( data_expected_prev[21] !== 1'bx ) && ( data_prev[21] !== data_expected_prev[21] )
		&& ((data_expected_prev[21] !== last_data_exp[21]) ||
			on_first_change[3])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port data[21] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", data_expected_prev);
		$display ("     Real value = %b", data_prev);
		nummismatches = nummismatches + 1;
		on_first_change[3] = 1'b0;
		last_data_exp[21] = data_expected_prev[21];
	end
	if (
		( data_expected_prev[22] !== 1'bx ) && ( data_prev[22] !== data_expected_prev[22] )
		&& ((data_expected_prev[22] !== last_data_exp[22]) ||
			on_first_change[3])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port data[22] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", data_expected_prev);
		$display ("     Real value = %b", data_prev);
		nummismatches = nummismatches + 1;
		on_first_change[3] = 1'b0;
		last_data_exp[22] = data_expected_prev[22];
	end
	if (
		( data_expected_prev[23] !== 1'bx ) && ( data_prev[23] !== data_expected_prev[23] )
		&& ((data_expected_prev[23] !== last_data_exp[23]) ||
			on_first_change[3])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port data[23] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", data_expected_prev);
		$display ("     Real value = %b", data_prev);
		nummismatches = nummismatches + 1;
		on_first_change[3] = 1'b0;
		last_data_exp[23] = data_expected_prev[23];
	end
	if (
		( data_expected_prev[24] !== 1'bx ) && ( data_prev[24] !== data_expected_prev[24] )
		&& ((data_expected_prev[24] !== last_data_exp[24]) ||
			on_first_change[3])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port data[24] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", data_expected_prev);
		$display ("     Real value = %b", data_prev);
		nummismatches = nummismatches + 1;
		on_first_change[3] = 1'b0;
		last_data_exp[24] = data_expected_prev[24];
	end
	if (
		( data_expected_prev[25] !== 1'bx ) && ( data_prev[25] !== data_expected_prev[25] )
		&& ((data_expected_prev[25] !== last_data_exp[25]) ||
			on_first_change[3])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port data[25] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", data_expected_prev);
		$display ("     Real value = %b", data_prev);
		nummismatches = nummismatches + 1;
		on_first_change[3] = 1'b0;
		last_data_exp[25] = data_expected_prev[25];
	end
	if (
		( data_expected_prev[26] !== 1'bx ) && ( data_prev[26] !== data_expected_prev[26] )
		&& ((data_expected_prev[26] !== last_data_exp[26]) ||
			on_first_change[3])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port data[26] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", data_expected_prev);
		$display ("     Real value = %b", data_prev);
		nummismatches = nummismatches + 1;
		on_first_change[3] = 1'b0;
		last_data_exp[26] = data_expected_prev[26];
	end
	if (
		( data_expected_prev[27] !== 1'bx ) && ( data_prev[27] !== data_expected_prev[27] )
		&& ((data_expected_prev[27] !== last_data_exp[27]) ||
			on_first_change[3])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port data[27] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", data_expected_prev);
		$display ("     Real value = %b", data_prev);
		nummismatches = nummismatches + 1;
		on_first_change[3] = 1'b0;
		last_data_exp[27] = data_expected_prev[27];
	end
	if (
		( data_expected_prev[28] !== 1'bx ) && ( data_prev[28] !== data_expected_prev[28] )
		&& ((data_expected_prev[28] !== last_data_exp[28]) ||
			on_first_change[3])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port data[28] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", data_expected_prev);
		$display ("     Real value = %b", data_prev);
		nummismatches = nummismatches + 1;
		on_first_change[3] = 1'b0;
		last_data_exp[28] = data_expected_prev[28];
	end
	if (
		( data_expected_prev[29] !== 1'bx ) && ( data_prev[29] !== data_expected_prev[29] )
		&& ((data_expected_prev[29] !== last_data_exp[29]) ||
			on_first_change[3])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port data[29] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", data_expected_prev);
		$display ("     Real value = %b", data_prev);
		nummismatches = nummismatches + 1;
		on_first_change[3] = 1'b0;
		last_data_exp[29] = data_expected_prev[29];
	end
	if (
		( data_expected_prev[30] !== 1'bx ) && ( data_prev[30] !== data_expected_prev[30] )
		&& ((data_expected_prev[30] !== last_data_exp[30]) ||
			on_first_change[3])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port data[30] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", data_expected_prev);
		$display ("     Real value = %b", data_prev);
		nummismatches = nummismatches + 1;
		on_first_change[3] = 1'b0;
		last_data_exp[30] = data_expected_prev[30];
	end
	if (
		( data_expected_prev[31] !== 1'bx ) && ( data_prev[31] !== data_expected_prev[31] )
		&& ((data_expected_prev[31] !== last_data_exp[31]) ||
			on_first_change[3])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port data[31] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", data_expected_prev);
		$display ("     Real value = %b", data_prev);
		nummismatches = nummismatches + 1;
		on_first_change[3] = 1'b0;
		last_data_exp[31] = data_expected_prev[31];
	end
	if (
		( rden_expected_prev !== 1'bx ) && ( rden_prev !== rden_expected_prev )
		&& ((rden_expected_prev !== last_rden_exp) ||
			on_first_change[5])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port rden :: @time = %t",  $realtime);
		$display ("     Expected value = %b", rden_expected_prev);
		$display ("     Real value = %b", rden_prev);
		nummismatches = nummismatches + 1;
		on_first_change[5] = 1'b0;
		last_rden_exp = rden_expected_prev;
	end
	if (
		( shft8_expected_prev !== 1'bx ) && ( shft8_prev !== shft8_expected_prev )
		&& ((shft8_expected_prev !== last_shft8_exp) ||
			on_first_change[6])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port shft8 :: @time = %t",  $realtime);
		$display ("     Expected value = %b", shft8_expected_prev);
		$display ("     Real value = %b", shft8_prev);
		nummismatches = nummismatches + 1;
		on_first_change[6] = 1'b0;
		last_shft8_exp = shft8_expected_prev;
	end
	if (
		( shft16_expected_prev !== 1'bx ) && ( shft16_prev !== shft16_expected_prev )
		&& ((shft16_expected_prev !== last_shft16_exp) ||
			on_first_change[7])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port shft16 :: @time = %t",  $realtime);
		$display ("     Expected value = %b", shft16_expected_prev);
		$display ("     Real value = %b", shft16_prev);
		nummismatches = nummismatches + 1;
		on_first_change[7] = 1'b0;
		last_shft16_exp = shft16_expected_prev;
	end
	if (
		( wren_expected_prev !== 1'bx ) && ( wren_prev !== wren_expected_prev )
		&& ((wren_expected_prev !== last_wren_exp) ||
			on_first_change[8])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port wren :: @time = %t",  $realtime);
		$display ("     Expected value = %b", wren_expected_prev);
		$display ("     Real value = %b", wren_prev);
		nummismatches = nummismatches + 1;
		on_first_change[8] = 1'b0;
		last_wren_exp = wren_expected_prev;
	end

	trigger <= ~trigger;
end
initial 

begin 
$timeformat(-12,3," ps",6);
#1000000;
if (nummismatches > 0)
	$display ("%d mismatched vectors : Simulation failed !",nummismatches);
else
	$display ("Simulation passed !");
$finish;
end 
endmodule

module sramif_vlg_vec_tst();
// constants                                           
// general purpose registers
reg [31:0] ABUS;
reg [31:0] DBUS;
reg [1:0] LEN;
reg RD;
reg WR;
// wires                                               
wire [12:0] address;
wire [3:0] byteena;
wire [31:0] data;
wire rdd;
wire rden;
wire shft8;
wire shft16;
wire wren;

wire sampler;                             

// assign statements (if any)                          
sramif i1 (
// port map - connection between master ports and signals/registers   
	.ABUS(ABUS),
	.address(address),
	.byteena(byteena),
	.data(data),
	.DBUS(DBUS),
	.LEN(LEN),
	.RD(RD),
	.rdd(rdd),
	.rden(rden),
	.shft8(shft8),
	.shft16(shft16),
	.WR(WR),
	.wren(wren)
);
// ABUS[ 31 ]
initial
begin
	ABUS[31] = 1'b0;
	ABUS[31] = #5000 1'b1;
	ABUS[31] = #5000 1'b0;
	ABUS[31] = #5000 1'b1;
	ABUS[31] = #15000 1'b0;
	ABUS[31] = #5000 1'b1;
	ABUS[31] = #5000 1'b0;
	ABUS[31] = #10000 1'b1;
	ABUS[31] = #20000 1'b0;
	ABUS[31] = #10000 1'b1;
	ABUS[31] = #5000 1'b0;
	ABUS[31] = #5000 1'b1;
	ABUS[31] = #20000 1'b0;
	ABUS[31] = #20000 1'b1;
	ABUS[31] = #5000 1'b0;
	ABUS[31] = #5000 1'b1;
	ABUS[31] = #5000 1'b0;
	ABUS[31] = #10000 1'b1;
	ABUS[31] = #10000 1'b0;
	ABUS[31] = #5000 1'b1;
	ABUS[31] = #20000 1'b0;
	ABUS[31] = #5000 1'b1;
	ABUS[31] = #10000 1'b0;
	ABUS[31] = #5000 1'b1;
	ABUS[31] = #50000 1'b0;
	ABUS[31] = #5000 1'b1;
	ABUS[31] = #5000 1'b0;
	ABUS[31] = #5000 1'b1;
	ABUS[31] = #5000 1'b0;
	ABUS[31] = #5000 1'b1;
	ABUS[31] = #10000 1'b0;
	ABUS[31] = #5000 1'b1;
	ABUS[31] = #10000 1'b0;
	ABUS[31] = #5000 1'b1;
	ABUS[31] = #5000 1'b0;
	ABUS[31] = #5000 1'b1;
	ABUS[31] = #10000 1'b0;
	ABUS[31] = #10000 1'b1;
	ABUS[31] = #5000 1'b0;
	ABUS[31] = #5000 1'b1;
	ABUS[31] = #5000 1'b0;
	ABUS[31] = #5000 1'b1;
	ABUS[31] = #5000 1'b0;
	ABUS[31] = #10000 1'b1;
	ABUS[31] = #10000 1'b0;
	ABUS[31] = #10000 1'b1;
	ABUS[31] = #5000 1'b0;
	ABUS[31] = #5000 1'b1;
	ABUS[31] = #10000 1'b0;
	ABUS[31] = #5000 1'b1;
	ABUS[31] = #5000 1'b0;
	ABUS[31] = #5000 1'b1;
	ABUS[31] = #5000 1'b0;
	ABUS[31] = #10000 1'b1;
	ABUS[31] = #10000 1'b0;
	ABUS[31] = #5000 1'b1;
	ABUS[31] = #15000 1'b0;
	ABUS[31] = #5000 1'b1;
	ABUS[31] = #15000 1'b0;
	ABUS[31] = #5000 1'b1;
	ABUS[31] = #10000 1'b0;
	ABUS[31] = #15000 1'b1;
	ABUS[31] = #10000 1'b0;
	ABUS[31] = #10000 1'b1;
	ABUS[31] = #10000 1'b0;
	ABUS[31] = #10000 1'b1;
	ABUS[31] = #15000 1'b0;
	ABUS[31] = #10000 1'b1;
	ABUS[31] = #30000 1'b0;
	ABUS[31] = #5000 1'b1;
	ABUS[31] = #25000 1'b0;
	ABUS[31] = #50000 1'b1;
	ABUS[31] = #5000 1'b0;
	ABUS[31] = #10000 1'b1;
	ABUS[31] = #10000 1'b0;
	ABUS[31] = #10000 1'b1;
	ABUS[31] = #10000 1'b0;
	ABUS[31] = #5000 1'b1;
	ABUS[31] = #35000 1'b0;
	ABUS[31] = #5000 1'b1;
	ABUS[31] = #15000 1'b0;
	ABUS[31] = #10000 1'b1;
	ABUS[31] = #10000 1'b0;
	ABUS[31] = #10000 1'b1;
	ABUS[31] = #5000 1'b0;
	ABUS[31] = #5000 1'b1;
	ABUS[31] = #5000 1'b0;
	ABUS[31] = #5000 1'b1;
	ABUS[31] = #5000 1'b0;
	ABUS[31] = #15000 1'b1;
	ABUS[31] = #5000 1'b0;
	ABUS[31] = #50000 1'b1;
	ABUS[31] = #5000 1'b0;
	ABUS[31] = #10000 1'b1;
	ABUS[31] = #25000 1'b0;
	ABUS[31] = #5000 1'b1;
	ABUS[31] = #10000 1'b0;
	ABUS[31] = #5000 1'b1;
end 
// ABUS[ 30 ]
initial
begin
	ABUS[30] = 1'b0;
	ABUS[30] = #5000 1'b1;
	ABUS[30] = #15000 1'b0;
	ABUS[30] = #15000 1'b1;
	ABUS[30] = #5000 1'b0;
	ABUS[30] = #15000 1'b1;
	ABUS[30] = #10000 1'b0;
	ABUS[30] = #15000 1'b1;
	ABUS[30] = #20000 1'b0;
	ABUS[30] = #5000 1'b1;
	ABUS[30] = #20000 1'b0;
	ABUS[30] = #20000 1'b1;
	ABUS[30] = #5000 1'b0;
	ABUS[30] = #5000 1'b1;
	ABUS[30] = #25000 1'b0;
	ABUS[30] = #5000 1'b1;
	ABUS[30] = #5000 1'b0;
	ABUS[30] = #20000 1'b1;
	ABUS[30] = #10000 1'b0;
	ABUS[30] = #15000 1'b1;
	ABUS[30] = #5000 1'b0;
	ABUS[30] = #5000 1'b1;
	ABUS[30] = #5000 1'b0;
	ABUS[30] = #10000 1'b1;
	ABUS[30] = #5000 1'b0;
	ABUS[30] = #5000 1'b1;
	ABUS[30] = #5000 1'b0;
	ABUS[30] = #30000 1'b1;
	ABUS[30] = #5000 1'b0;
	ABUS[30] = #15000 1'b1;
	ABUS[30] = #5000 1'b0;
	ABUS[30] = #10000 1'b1;
	ABUS[30] = #35000 1'b0;
	ABUS[30] = #5000 1'b1;
	ABUS[30] = #10000 1'b0;
	ABUS[30] = #5000 1'b1;
	ABUS[30] = #15000 1'b0;
	ABUS[30] = #5000 1'b1;
	ABUS[30] = #10000 1'b0;
	ABUS[30] = #5000 1'b1;
	ABUS[30] = #5000 1'b0;
	ABUS[30] = #20000 1'b1;
	ABUS[30] = #5000 1'b0;
	ABUS[30] = #10000 1'b1;
	ABUS[30] = #20000 1'b0;
	ABUS[30] = #5000 1'b1;
	ABUS[30] = #40000 1'b0;
	ABUS[30] = #25000 1'b1;
	ABUS[30] = #5000 1'b0;
	ABUS[30] = #5000 1'b1;
	ABUS[30] = #5000 1'b0;
	ABUS[30] = #5000 1'b1;
	ABUS[30] = #15000 1'b0;
	ABUS[30] = #5000 1'b1;
	ABUS[30] = #10000 1'b0;
	ABUS[30] = #15000 1'b1;
	ABUS[30] = #5000 1'b0;
	ABUS[30] = #5000 1'b1;
	ABUS[30] = #10000 1'b0;
	ABUS[30] = #25000 1'b1;
	ABUS[30] = #5000 1'b0;
	ABUS[30] = #5000 1'b1;
	ABUS[30] = #15000 1'b0;
	ABUS[30] = #5000 1'b1;
	ABUS[30] = #10000 1'b0;
	ABUS[30] = #5000 1'b1;
	ABUS[30] = #5000 1'b0;
	ABUS[30] = #5000 1'b1;
	ABUS[30] = #5000 1'b0;
	ABUS[30] = #20000 1'b1;
	ABUS[30] = #10000 1'b0;
	ABUS[30] = #10000 1'b1;
	ABUS[30] = #10000 1'b0;
	ABUS[30] = #5000 1'b1;
	ABUS[30] = #5000 1'b0;
	ABUS[30] = #20000 1'b1;
	ABUS[30] = #5000 1'b0;
	ABUS[30] = #10000 1'b1;
	ABUS[30] = #5000 1'b0;
	ABUS[30] = #10000 1'b1;
	ABUS[30] = #10000 1'b0;
	ABUS[30] = #10000 1'b1;
	ABUS[30] = #10000 1'b0;
	ABUS[30] = #15000 1'b1;
	ABUS[30] = #5000 1'b0;
	ABUS[30] = #5000 1'b1;
	ABUS[30] = #5000 1'b0;
	ABUS[30] = #5000 1'b1;
	ABUS[30] = #20000 1'b0;
	ABUS[30] = #10000 1'b1;
	ABUS[30] = #25000 1'b0;
	ABUS[30] = #10000 1'b1;
	ABUS[30] = #5000 1'b0;
	ABUS[30] = #10000 1'b1;
	ABUS[30] = #5000 1'b0;
	ABUS[30] = #5000 1'b1;
end 
// ABUS[ 29 ]
initial
begin
	ABUS[29] = 1'b1;
	ABUS[29] = #25000 1'b0;
	ABUS[29] = #25000 1'b1;
	ABUS[29] = #5000 1'b0;
	ABUS[29] = #5000 1'b1;
	ABUS[29] = #10000 1'b0;
	ABUS[29] = #20000 1'b1;
	ABUS[29] = #5000 1'b0;
	ABUS[29] = #30000 1'b1;
	ABUS[29] = #10000 1'b0;
	ABUS[29] = #5000 1'b1;
	ABUS[29] = #5000 1'b0;
	ABUS[29] = #10000 1'b1;
	ABUS[29] = #10000 1'b0;
	ABUS[29] = #20000 1'b1;
	ABUS[29] = #15000 1'b0;
	ABUS[29] = #5000 1'b1;
	ABUS[29] = #5000 1'b0;
	ABUS[29] = #5000 1'b1;
	ABUS[29] = #5000 1'b0;
	ABUS[29] = #5000 1'b1;
	ABUS[29] = #15000 1'b0;
	ABUS[29] = #5000 1'b1;
	ABUS[29] = #5000 1'b0;
	ABUS[29] = #10000 1'b1;
	ABUS[29] = #10000 1'b0;
	ABUS[29] = #5000 1'b1;
	ABUS[29] = #10000 1'b0;
	ABUS[29] = #5000 1'b1;
	ABUS[29] = #5000 1'b0;
	ABUS[29] = #5000 1'b1;
	ABUS[29] = #5000 1'b0;
	ABUS[29] = #5000 1'b1;
	ABUS[29] = #10000 1'b0;
	ABUS[29] = #5000 1'b1;
	ABUS[29] = #5000 1'b0;
	ABUS[29] = #5000 1'b1;
	ABUS[29] = #5000 1'b0;
	ABUS[29] = #20000 1'b1;
	ABUS[29] = #10000 1'b0;
	ABUS[29] = #5000 1'b1;
	ABUS[29] = #10000 1'b0;
	ABUS[29] = #5000 1'b1;
	ABUS[29] = #20000 1'b0;
	ABUS[29] = #5000 1'b1;
	ABUS[29] = #5000 1'b0;
	ABUS[29] = #5000 1'b1;
	ABUS[29] = #10000 1'b0;
	ABUS[29] = #5000 1'b1;
	ABUS[29] = #5000 1'b0;
	ABUS[29] = #25000 1'b1;
	ABUS[29] = #5000 1'b0;
	ABUS[29] = #5000 1'b1;
	ABUS[29] = #10000 1'b0;
	ABUS[29] = #10000 1'b1;
	ABUS[29] = #5000 1'b0;
	ABUS[29] = #10000 1'b1;
	ABUS[29] = #15000 1'b0;
	ABUS[29] = #5000 1'b1;
	ABUS[29] = #5000 1'b0;
	ABUS[29] = #5000 1'b1;
	ABUS[29] = #10000 1'b0;
	ABUS[29] = #5000 1'b1;
	ABUS[29] = #10000 1'b0;
	ABUS[29] = #5000 1'b1;
	ABUS[29] = #25000 1'b0;
	ABUS[29] = #5000 1'b1;
	ABUS[29] = #10000 1'b0;
	ABUS[29] = #30000 1'b1;
	ABUS[29] = #5000 1'b0;
	ABUS[29] = #20000 1'b1;
	ABUS[29] = #5000 1'b0;
	ABUS[29] = #20000 1'b1;
	ABUS[29] = #5000 1'b0;
	ABUS[29] = #5000 1'b1;
	ABUS[29] = #5000 1'b0;
	ABUS[29] = #5000 1'b1;
	ABUS[29] = #10000 1'b0;
	ABUS[29] = #5000 1'b1;
	ABUS[29] = #5000 1'b0;
	ABUS[29] = #5000 1'b1;
	ABUS[29] = #15000 1'b0;
	ABUS[29] = #5000 1'b1;
	ABUS[29] = #5000 1'b0;
	ABUS[29] = #20000 1'b1;
	ABUS[29] = #10000 1'b0;
	ABUS[29] = #5000 1'b1;
	ABUS[29] = #15000 1'b0;
	ABUS[29] = #5000 1'b1;
	ABUS[29] = #15000 1'b0;
	ABUS[29] = #5000 1'b1;
	ABUS[29] = #10000 1'b0;
	ABUS[29] = #10000 1'b1;
	ABUS[29] = #15000 1'b0;
	ABUS[29] = #10000 1'b1;
	ABUS[29] = #5000 1'b0;
	ABUS[29] = #5000 1'b1;
	ABUS[29] = #10000 1'b0;
	ABUS[29] = #10000 1'b1;
	ABUS[29] = #5000 1'b0;
	ABUS[29] = #10000 1'b1;
	ABUS[29] = #5000 1'b0;
	ABUS[29] = #5000 1'b1;
	ABUS[29] = #5000 1'b0;
	ABUS[29] = #20000 1'b1;
	ABUS[29] = #5000 1'b0;
	ABUS[29] = #20000 1'b1;
end 
// ABUS[ 28 ]
initial
begin
	ABUS[28] = 1'b0;
	ABUS[28] = #5000 1'b1;
	ABUS[28] = #10000 1'b0;
	ABUS[28] = #10000 1'b1;
	ABUS[28] = #5000 1'b0;
	ABUS[28] = #5000 1'b1;
	ABUS[28] = #20000 1'b0;
	ABUS[28] = #10000 1'b1;
	ABUS[28] = #5000 1'b0;
	ABUS[28] = #10000 1'b1;
	ABUS[28] = #5000 1'b0;
	ABUS[28] = #5000 1'b1;
	ABUS[28] = #15000 1'b0;
	ABUS[28] = #5000 1'b1;
	ABUS[28] = #5000 1'b0;
	ABUS[28] = #15000 1'b1;
	ABUS[28] = #10000 1'b0;
	ABUS[28] = #5000 1'b1;
	ABUS[28] = #5000 1'b0;
	ABUS[28] = #10000 1'b1;
	ABUS[28] = #10000 1'b0;
	ABUS[28] = #10000 1'b1;
	ABUS[28] = #5000 1'b0;
	ABUS[28] = #15000 1'b1;
	ABUS[28] = #10000 1'b0;
	ABUS[28] = #10000 1'b1;
	ABUS[28] = #10000 1'b0;
	ABUS[28] = #5000 1'b1;
	ABUS[28] = #5000 1'b0;
	ABUS[28] = #5000 1'b1;
	ABUS[28] = #5000 1'b0;
	ABUS[28] = #5000 1'b1;
	ABUS[28] = #5000 1'b0;
	ABUS[28] = #30000 1'b1;
	ABUS[28] = #20000 1'b0;
	ABUS[28] = #5000 1'b1;
	ABUS[28] = #10000 1'b0;
	ABUS[28] = #5000 1'b1;
	ABUS[28] = #5000 1'b0;
	ABUS[28] = #10000 1'b1;
	ABUS[28] = #5000 1'b0;
	ABUS[28] = #5000 1'b1;
	ABUS[28] = #10000 1'b0;
	ABUS[28] = #20000 1'b1;
	ABUS[28] = #15000 1'b0;
	ABUS[28] = #40000 1'b1;
	ABUS[28] = #5000 1'b0;
	ABUS[28] = #30000 1'b1;
	ABUS[28] = #10000 1'b0;
	ABUS[28] = #5000 1'b1;
	ABUS[28] = #10000 1'b0;
	ABUS[28] = #5000 1'b1;
	ABUS[28] = #5000 1'b0;
	ABUS[28] = #30000 1'b1;
	ABUS[28] = #5000 1'b0;
	ABUS[28] = #25000 1'b1;
	ABUS[28] = #5000 1'b0;
	ABUS[28] = #10000 1'b1;
	ABUS[28] = #10000 1'b0;
	ABUS[28] = #10000 1'b1;
	ABUS[28] = #10000 1'b0;
	ABUS[28] = #5000 1'b1;
	ABUS[28] = #15000 1'b0;
	ABUS[28] = #5000 1'b1;
	ABUS[28] = #5000 1'b0;
	ABUS[28] = #5000 1'b1;
	ABUS[28] = #5000 1'b0;
	ABUS[28] = #5000 1'b1;
	ABUS[28] = #15000 1'b0;
	ABUS[28] = #30000 1'b1;
	ABUS[28] = #10000 1'b0;
	ABUS[28] = #20000 1'b1;
	ABUS[28] = #5000 1'b0;
	ABUS[28] = #5000 1'b1;
	ABUS[28] = #5000 1'b0;
	ABUS[28] = #5000 1'b1;
	ABUS[28] = #5000 1'b0;
	ABUS[28] = #10000 1'b1;
	ABUS[28] = #10000 1'b0;
	ABUS[28] = #10000 1'b1;
	ABUS[28] = #5000 1'b0;
	ABUS[28] = #5000 1'b1;
	ABUS[28] = #15000 1'b0;
	ABUS[28] = #5000 1'b1;
	ABUS[28] = #5000 1'b0;
	ABUS[28] = #10000 1'b1;
	ABUS[28] = #10000 1'b0;
	ABUS[28] = #5000 1'b1;
	ABUS[28] = #5000 1'b0;
	ABUS[28] = #5000 1'b1;
	ABUS[28] = #5000 1'b0;
	ABUS[28] = #10000 1'b1;
	ABUS[28] = #5000 1'b0;
	ABUS[28] = #5000 1'b1;
	ABUS[28] = #5000 1'b0;
	ABUS[28] = #5000 1'b1;
	ABUS[28] = #5000 1'b0;
	ABUS[28] = #5000 1'b1;
	ABUS[28] = #5000 1'b0;
	ABUS[28] = #5000 1'b1;
	ABUS[28] = #5000 1'b0;
	ABUS[28] = #15000 1'b1;
	ABUS[28] = #5000 1'b0;
	ABUS[28] = #10000 1'b1;
	ABUS[28] = #15000 1'b0;
	ABUS[28] = #15000 1'b1;
	ABUS[28] = #15000 1'b0;
end 
// ABUS[ 27 ]
initial
begin
	ABUS[27] = 1'b1;
	ABUS[27] = #5000 1'b0;
	ABUS[27] = #15000 1'b1;
	ABUS[27] = #5000 1'b0;
	ABUS[27] = #10000 1'b1;
	ABUS[27] = #5000 1'b0;
	ABUS[27] = #10000 1'b1;
	ABUS[27] = #5000 1'b0;
	ABUS[27] = #5000 1'b1;
	ABUS[27] = #10000 1'b0;
	ABUS[27] = #5000 1'b1;
	ABUS[27] = #20000 1'b0;
	ABUS[27] = #5000 1'b1;
	ABUS[27] = #5000 1'b0;
	ABUS[27] = #10000 1'b1;
	ABUS[27] = #10000 1'b0;
	ABUS[27] = #5000 1'b1;
	ABUS[27] = #5000 1'b0;
	ABUS[27] = #5000 1'b1;
	ABUS[27] = #10000 1'b0;
	ABUS[27] = #15000 1'b1;
	ABUS[27] = #25000 1'b0;
	ABUS[27] = #5000 1'b1;
	ABUS[27] = #20000 1'b0;
	ABUS[27] = #40000 1'b1;
	ABUS[27] = #10000 1'b0;
	ABUS[27] = #10000 1'b1;
	ABUS[27] = #5000 1'b0;
	ABUS[27] = #15000 1'b1;
	ABUS[27] = #25000 1'b0;
	ABUS[27] = #15000 1'b1;
	ABUS[27] = #5000 1'b0;
	ABUS[27] = #10000 1'b1;
	ABUS[27] = #5000 1'b0;
	ABUS[27] = #25000 1'b1;
	ABUS[27] = #10000 1'b0;
	ABUS[27] = #10000 1'b1;
	ABUS[27] = #10000 1'b0;
	ABUS[27] = #10000 1'b1;
	ABUS[27] = #10000 1'b0;
	ABUS[27] = #5000 1'b1;
	ABUS[27] = #15000 1'b0;
	ABUS[27] = #5000 1'b1;
	ABUS[27] = #5000 1'b0;
	ABUS[27] = #5000 1'b1;
	ABUS[27] = #5000 1'b0;
	ABUS[27] = #5000 1'b1;
	ABUS[27] = #5000 1'b0;
	ABUS[27] = #15000 1'b1;
	ABUS[27] = #5000 1'b0;
	ABUS[27] = #5000 1'b1;
	ABUS[27] = #10000 1'b0;
	ABUS[27] = #5000 1'b1;
	ABUS[27] = #10000 1'b0;
	ABUS[27] = #25000 1'b1;
	ABUS[27] = #5000 1'b0;
	ABUS[27] = #20000 1'b1;
	ABUS[27] = #15000 1'b0;
	ABUS[27] = #10000 1'b1;
	ABUS[27] = #15000 1'b0;
	ABUS[27] = #10000 1'b1;
	ABUS[27] = #5000 1'b0;
	ABUS[27] = #5000 1'b1;
	ABUS[27] = #5000 1'b0;
	ABUS[27] = #5000 1'b1;
	ABUS[27] = #25000 1'b0;
	ABUS[27] = #10000 1'b1;
	ABUS[27] = #10000 1'b0;
	ABUS[27] = #5000 1'b1;
	ABUS[27] = #5000 1'b0;
	ABUS[27] = #15000 1'b1;
	ABUS[27] = #5000 1'b0;
	ABUS[27] = #15000 1'b1;
	ABUS[27] = #15000 1'b0;
	ABUS[27] = #5000 1'b1;
	ABUS[27] = #10000 1'b0;
	ABUS[27] = #5000 1'b1;
	ABUS[27] = #5000 1'b0;
	ABUS[27] = #5000 1'b1;
	ABUS[27] = #10000 1'b0;
	ABUS[27] = #5000 1'b1;
	ABUS[27] = #5000 1'b0;
	ABUS[27] = #5000 1'b1;
	ABUS[27] = #5000 1'b0;
	ABUS[27] = #10000 1'b1;
	ABUS[27] = #5000 1'b0;
	ABUS[27] = #10000 1'b1;
	ABUS[27] = #15000 1'b0;
	ABUS[27] = #10000 1'b1;
	ABUS[27] = #5000 1'b0;
	ABUS[27] = #10000 1'b1;
	ABUS[27] = #5000 1'b0;
	ABUS[27] = #5000 1'b1;
	ABUS[27] = #5000 1'b0;
	ABUS[27] = #10000 1'b1;
	ABUS[27] = #5000 1'b0;
	ABUS[27] = #35000 1'b1;
	ABUS[27] = #10000 1'b0;
	ABUS[27] = #30000 1'b1;
	ABUS[27] = #5000 1'b0;
end 
// ABUS[ 26 ]
initial
begin
	ABUS[26] = 1'b0;
	ABUS[26] = #20000 1'b1;
	ABUS[26] = #5000 1'b0;
	ABUS[26] = #10000 1'b1;
	ABUS[26] = #5000 1'b0;
	ABUS[26] = #20000 1'b1;
	ABUS[26] = #5000 1'b0;
	ABUS[26] = #20000 1'b1;
	ABUS[26] = #15000 1'b0;
	ABUS[26] = #5000 1'b1;
	ABUS[26] = #5000 1'b0;
	ABUS[26] = #5000 1'b1;
	ABUS[26] = #10000 1'b0;
	ABUS[26] = #5000 1'b1;
	ABUS[26] = #5000 1'b0;
	ABUS[26] = #15000 1'b1;
	ABUS[26] = #5000 1'b0;
	ABUS[26] = #30000 1'b1;
	ABUS[26] = #5000 1'b0;
	ABUS[26] = #10000 1'b1;
	ABUS[26] = #5000 1'b0;
	ABUS[26] = #5000 1'b1;
	ABUS[26] = #5000 1'b0;
	ABUS[26] = #10000 1'b1;
	ABUS[26] = #10000 1'b0;
	ABUS[26] = #10000 1'b1;
	ABUS[26] = #5000 1'b0;
	ABUS[26] = #10000 1'b1;
	ABUS[26] = #10000 1'b0;
	ABUS[26] = #5000 1'b1;
	ABUS[26] = #5000 1'b0;
	ABUS[26] = #5000 1'b1;
	ABUS[26] = #5000 1'b0;
	ABUS[26] = #40000 1'b1;
	ABUS[26] = #5000 1'b0;
	ABUS[26] = #5000 1'b1;
	ABUS[26] = #10000 1'b0;
	ABUS[26] = #5000 1'b1;
	ABUS[26] = #20000 1'b0;
	ABUS[26] = #5000 1'b1;
	ABUS[26] = #15000 1'b0;
	ABUS[26] = #10000 1'b1;
	ABUS[26] = #10000 1'b0;
	ABUS[26] = #5000 1'b1;
	ABUS[26] = #5000 1'b0;
	ABUS[26] = #10000 1'b1;
	ABUS[26] = #15000 1'b0;
	ABUS[26] = #5000 1'b1;
	ABUS[26] = #5000 1'b0;
	ABUS[26] = #5000 1'b1;
	ABUS[26] = #5000 1'b0;
	ABUS[26] = #20000 1'b1;
	ABUS[26] = #10000 1'b0;
	ABUS[26] = #5000 1'b1;
	ABUS[26] = #10000 1'b0;
	ABUS[26] = #5000 1'b1;
	ABUS[26] = #5000 1'b0;
	ABUS[26] = #5000 1'b1;
	ABUS[26] = #10000 1'b0;
	ABUS[26] = #5000 1'b1;
	ABUS[26] = #5000 1'b0;
	ABUS[26] = #5000 1'b1;
	ABUS[26] = #5000 1'b0;
	ABUS[26] = #10000 1'b1;
	ABUS[26] = #15000 1'b0;
	ABUS[26] = #5000 1'b1;
	ABUS[26] = #15000 1'b0;
	ABUS[26] = #10000 1'b1;
	ABUS[26] = #5000 1'b0;
	ABUS[26] = #15000 1'b1;
	ABUS[26] = #5000 1'b0;
	ABUS[26] = #15000 1'b1;
	ABUS[26] = #10000 1'b0;
	ABUS[26] = #5000 1'b1;
	ABUS[26] = #10000 1'b0;
	ABUS[26] = #10000 1'b1;
	ABUS[26] = #20000 1'b0;
	ABUS[26] = #5000 1'b1;
	ABUS[26] = #5000 1'b0;
	ABUS[26] = #10000 1'b1;
	ABUS[26] = #5000 1'b0;
	ABUS[26] = #5000 1'b1;
	ABUS[26] = #5000 1'b0;
	ABUS[26] = #5000 1'b1;
	ABUS[26] = #10000 1'b0;
	ABUS[26] = #10000 1'b1;
	ABUS[26] = #10000 1'b0;
	ABUS[26] = #5000 1'b1;
	ABUS[26] = #50000 1'b0;
	ABUS[26] = #5000 1'b1;
	ABUS[26] = #10000 1'b0;
	ABUS[26] = #20000 1'b1;
	ABUS[26] = #15000 1'b0;
	ABUS[26] = #10000 1'b1;
	ABUS[26] = #10000 1'b0;
	ABUS[26] = #10000 1'b1;
	ABUS[26] = #5000 1'b0;
	ABUS[26] = #10000 1'b1;
	ABUS[26] = #10000 1'b0;
	ABUS[26] = #10000 1'b1;
	ABUS[26] = #15000 1'b0;
	ABUS[26] = #5000 1'b1;
	ABUS[26] = #15000 1'b0;
	ABUS[26] = #10000 1'b1;
end 
// ABUS[ 25 ]
initial
begin
	ABUS[25] = 1'b1;
	ABUS[25] = #5000 1'b0;
	ABUS[25] = #5000 1'b1;
	ABUS[25] = #5000 1'b0;
	ABUS[25] = #5000 1'b1;
	ABUS[25] = #5000 1'b0;
	ABUS[25] = #30000 1'b1;
	ABUS[25] = #5000 1'b0;
	ABUS[25] = #5000 1'b1;
	ABUS[25] = #5000 1'b0;
	ABUS[25] = #5000 1'b1;
	ABUS[25] = #5000 1'b0;
	ABUS[25] = #25000 1'b1;
	ABUS[25] = #5000 1'b0;
	ABUS[25] = #15000 1'b1;
	ABUS[25] = #10000 1'b0;
	ABUS[25] = #5000 1'b1;
	ABUS[25] = #5000 1'b0;
	ABUS[25] = #5000 1'b1;
	ABUS[25] = #5000 1'b0;
	ABUS[25] = #5000 1'b1;
	ABUS[25] = #5000 1'b0;
	ABUS[25] = #10000 1'b1;
	ABUS[25] = #10000 1'b0;
	ABUS[25] = #20000 1'b1;
	ABUS[25] = #15000 1'b0;
	ABUS[25] = #10000 1'b1;
	ABUS[25] = #5000 1'b0;
	ABUS[25] = #10000 1'b1;
	ABUS[25] = #5000 1'b0;
	ABUS[25] = #5000 1'b1;
	ABUS[25] = #20000 1'b0;
	ABUS[25] = #5000 1'b1;
	ABUS[25] = #5000 1'b0;
	ABUS[25] = #5000 1'b1;
	ABUS[25] = #5000 1'b0;
	ABUS[25] = #5000 1'b1;
	ABUS[25] = #20000 1'b0;
	ABUS[25] = #10000 1'b1;
	ABUS[25] = #15000 1'b0;
	ABUS[25] = #5000 1'b1;
	ABUS[25] = #25000 1'b0;
	ABUS[25] = #5000 1'b1;
	ABUS[25] = #5000 1'b0;
	ABUS[25] = #15000 1'b1;
	ABUS[25] = #20000 1'b0;
	ABUS[25] = #10000 1'b1;
	ABUS[25] = #10000 1'b0;
	ABUS[25] = #10000 1'b1;
	ABUS[25] = #5000 1'b0;
	ABUS[25] = #20000 1'b1;
	ABUS[25] = #20000 1'b0;
	ABUS[25] = #10000 1'b1;
	ABUS[25] = #5000 1'b0;
	ABUS[25] = #5000 1'b1;
	ABUS[25] = #15000 1'b0;
	ABUS[25] = #5000 1'b1;
	ABUS[25] = #5000 1'b0;
	ABUS[25] = #10000 1'b1;
	ABUS[25] = #5000 1'b0;
	ABUS[25] = #5000 1'b1;
	ABUS[25] = #30000 1'b0;
	ABUS[25] = #5000 1'b1;
	ABUS[25] = #5000 1'b0;
	ABUS[25] = #5000 1'b1;
	ABUS[25] = #5000 1'b0;
	ABUS[25] = #15000 1'b1;
	ABUS[25] = #5000 1'b0;
	ABUS[25] = #10000 1'b1;
	ABUS[25] = #15000 1'b0;
	ABUS[25] = #45000 1'b1;
	ABUS[25] = #5000 1'b0;
	ABUS[25] = #5000 1'b1;
	ABUS[25] = #10000 1'b0;
	ABUS[25] = #10000 1'b1;
	ABUS[25] = #10000 1'b0;
	ABUS[25] = #20000 1'b1;
	ABUS[25] = #5000 1'b0;
	ABUS[25] = #5000 1'b1;
	ABUS[25] = #20000 1'b0;
	ABUS[25] = #5000 1'b1;
	ABUS[25] = #25000 1'b0;
	ABUS[25] = #5000 1'b1;
	ABUS[25] = #15000 1'b0;
	ABUS[25] = #25000 1'b1;
	ABUS[25] = #25000 1'b0;
	ABUS[25] = #25000 1'b1;
	ABUS[25] = #25000 1'b0;
	ABUS[25] = #5000 1'b1;
	ABUS[25] = #25000 1'b0;
	ABUS[25] = #15000 1'b1;
	ABUS[25] = #5000 1'b0;
	ABUS[25] = #5000 1'b1;
end 
// ABUS[ 24 ]
initial
begin
	ABUS[24] = 1'b0;
	ABUS[24] = #10000 1'b1;
	ABUS[24] = #10000 1'b0;
	ABUS[24] = #5000 1'b1;
	ABUS[24] = #5000 1'b0;
	ABUS[24] = #20000 1'b1;
	ABUS[24] = #5000 1'b0;
	ABUS[24] = #5000 1'b1;
	ABUS[24] = #5000 1'b0;
	ABUS[24] = #15000 1'b1;
	ABUS[24] = #5000 1'b0;
	ABUS[24] = #10000 1'b1;
	ABUS[24] = #45000 1'b0;
	ABUS[24] = #10000 1'b1;
	ABUS[24] = #5000 1'b0;
	ABUS[24] = #20000 1'b1;
	ABUS[24] = #10000 1'b0;
	ABUS[24] = #5000 1'b1;
	ABUS[24] = #5000 1'b0;
	ABUS[24] = #5000 1'b1;
	ABUS[24] = #10000 1'b0;
	ABUS[24] = #5000 1'b1;
	ABUS[24] = #15000 1'b0;
	ABUS[24] = #10000 1'b1;
	ABUS[24] = #5000 1'b0;
	ABUS[24] = #10000 1'b1;
	ABUS[24] = #5000 1'b0;
	ABUS[24] = #5000 1'b1;
	ABUS[24] = #10000 1'b0;
	ABUS[24] = #5000 1'b1;
	ABUS[24] = #5000 1'b0;
	ABUS[24] = #5000 1'b1;
	ABUS[24] = #5000 1'b0;
	ABUS[24] = #5000 1'b1;
	ABUS[24] = #20000 1'b0;
	ABUS[24] = #5000 1'b1;
	ABUS[24] = #15000 1'b0;
	ABUS[24] = #5000 1'b1;
	ABUS[24] = #5000 1'b0;
	ABUS[24] = #5000 1'b1;
	ABUS[24] = #10000 1'b0;
	ABUS[24] = #10000 1'b1;
	ABUS[24] = #10000 1'b0;
	ABUS[24] = #10000 1'b1;
	ABUS[24] = #10000 1'b0;
	ABUS[24] = #5000 1'b1;
	ABUS[24] = #10000 1'b0;
	ABUS[24] = #25000 1'b1;
	ABUS[24] = #5000 1'b0;
	ABUS[24] = #5000 1'b1;
	ABUS[24] = #10000 1'b0;
	ABUS[24] = #5000 1'b1;
	ABUS[24] = #5000 1'b0;
	ABUS[24] = #10000 1'b1;
	ABUS[24] = #5000 1'b0;
	ABUS[24] = #10000 1'b1;
	ABUS[24] = #15000 1'b0;
	ABUS[24] = #15000 1'b1;
	ABUS[24] = #5000 1'b0;
	ABUS[24] = #5000 1'b1;
	ABUS[24] = #5000 1'b0;
	ABUS[24] = #5000 1'b1;
	ABUS[24] = #5000 1'b0;
	ABUS[24] = #15000 1'b1;
	ABUS[24] = #15000 1'b0;
	ABUS[24] = #15000 1'b1;
	ABUS[24] = #10000 1'b0;
	ABUS[24] = #20000 1'b1;
	ABUS[24] = #20000 1'b0;
	ABUS[24] = #5000 1'b1;
	ABUS[24] = #5000 1'b0;
	ABUS[24] = #5000 1'b1;
	ABUS[24] = #15000 1'b0;
	ABUS[24] = #20000 1'b1;
	ABUS[24] = #5000 1'b0;
	ABUS[24] = #10000 1'b1;
	ABUS[24] = #5000 1'b0;
	ABUS[24] = #15000 1'b1;
	ABUS[24] = #5000 1'b0;
	ABUS[24] = #10000 1'b1;
	ABUS[24] = #10000 1'b0;
	ABUS[24] = #5000 1'b1;
	ABUS[24] = #5000 1'b0;
	ABUS[24] = #5000 1'b1;
	ABUS[24] = #5000 1'b0;
	ABUS[24] = #20000 1'b1;
	ABUS[24] = #5000 1'b0;
	ABUS[24] = #10000 1'b1;
	ABUS[24] = #5000 1'b0;
	ABUS[24] = #15000 1'b1;
	ABUS[24] = #5000 1'b0;
	ABUS[24] = #5000 1'b1;
	ABUS[24] = #5000 1'b0;
	ABUS[24] = #5000 1'b1;
	ABUS[24] = #5000 1'b0;
	ABUS[24] = #10000 1'b1;
	ABUS[24] = #20000 1'b0;
	ABUS[24] = #5000 1'b1;
	ABUS[24] = #15000 1'b0;
	ABUS[24] = #5000 1'b1;
	ABUS[24] = #20000 1'b0;
	ABUS[24] = #10000 1'b1;
	ABUS[24] = #15000 1'b0;
	ABUS[24] = #5000 1'b1;
	ABUS[24] = #10000 1'b0;
	ABUS[24] = #5000 1'b1;
	ABUS[24] = #5000 1'b0;
	ABUS[24] = #5000 1'b1;
	ABUS[24] = #5000 1'b0;
end 
// ABUS[ 23 ]
initial
begin
	ABUS[23] = 1'b1;
	ABUS[23] = #5000 1'b0;
	ABUS[23] = #5000 1'b1;
	ABUS[23] = #10000 1'b0;
	ABUS[23] = #5000 1'b1;
	ABUS[23] = #5000 1'b0;
	ABUS[23] = #20000 1'b1;
	ABUS[23] = #10000 1'b0;
	ABUS[23] = #15000 1'b1;
	ABUS[23] = #5000 1'b0;
	ABUS[23] = #5000 1'b1;
	ABUS[23] = #5000 1'b0;
	ABUS[23] = #10000 1'b1;
	ABUS[23] = #5000 1'b0;
	ABUS[23] = #10000 1'b1;
	ABUS[23] = #5000 1'b0;
	ABUS[23] = #5000 1'b1;
	ABUS[23] = #10000 1'b0;
	ABUS[23] = #10000 1'b1;
	ABUS[23] = #20000 1'b0;
	ABUS[23] = #10000 1'b1;
	ABUS[23] = #5000 1'b0;
	ABUS[23] = #10000 1'b1;
	ABUS[23] = #25000 1'b0;
	ABUS[23] = #20000 1'b1;
	ABUS[23] = #5000 1'b0;
	ABUS[23] = #10000 1'b1;
	ABUS[23] = #25000 1'b0;
	ABUS[23] = #5000 1'b1;
	ABUS[23] = #5000 1'b0;
	ABUS[23] = #5000 1'b1;
	ABUS[23] = #5000 1'b0;
	ABUS[23] = #5000 1'b1;
	ABUS[23] = #10000 1'b0;
	ABUS[23] = #20000 1'b1;
	ABUS[23] = #10000 1'b0;
	ABUS[23] = #10000 1'b1;
	ABUS[23] = #5000 1'b0;
	ABUS[23] = #5000 1'b1;
	ABUS[23] = #5000 1'b0;
	ABUS[23] = #5000 1'b1;
	ABUS[23] = #5000 1'b0;
	ABUS[23] = #5000 1'b1;
	ABUS[23] = #5000 1'b0;
	ABUS[23] = #5000 1'b1;
	ABUS[23] = #10000 1'b0;
	ABUS[23] = #10000 1'b1;
	ABUS[23] = #5000 1'b0;
	ABUS[23] = #10000 1'b1;
	ABUS[23] = #5000 1'b0;
	ABUS[23] = #5000 1'b1;
	ABUS[23] = #5000 1'b0;
	ABUS[23] = #5000 1'b1;
	ABUS[23] = #5000 1'b0;
	ABUS[23] = #15000 1'b1;
	ABUS[23] = #5000 1'b0;
	ABUS[23] = #5000 1'b1;
	ABUS[23] = #5000 1'b0;
	ABUS[23] = #5000 1'b1;
	ABUS[23] = #10000 1'b0;
	ABUS[23] = #25000 1'b1;
	ABUS[23] = #10000 1'b0;
	ABUS[23] = #5000 1'b1;
	ABUS[23] = #20000 1'b0;
	ABUS[23] = #5000 1'b1;
	ABUS[23] = #5000 1'b0;
	ABUS[23] = #5000 1'b1;
	ABUS[23] = #10000 1'b0;
	ABUS[23] = #15000 1'b1;
	ABUS[23] = #5000 1'b0;
	ABUS[23] = #15000 1'b1;
	ABUS[23] = #5000 1'b0;
	ABUS[23] = #5000 1'b1;
	ABUS[23] = #5000 1'b0;
	ABUS[23] = #5000 1'b1;
	ABUS[23] = #35000 1'b0;
	ABUS[23] = #5000 1'b1;
	ABUS[23] = #5000 1'b0;
	ABUS[23] = #5000 1'b1;
	ABUS[23] = #20000 1'b0;
	ABUS[23] = #20000 1'b1;
	ABUS[23] = #15000 1'b0;
	ABUS[23] = #10000 1'b1;
	ABUS[23] = #5000 1'b0;
	ABUS[23] = #10000 1'b1;
	ABUS[23] = #5000 1'b0;
	ABUS[23] = #10000 1'b1;
	ABUS[23] = #15000 1'b0;
	ABUS[23] = #5000 1'b1;
	ABUS[23] = #15000 1'b0;
	ABUS[23] = #5000 1'b1;
	ABUS[23] = #5000 1'b0;
	ABUS[23] = #10000 1'b1;
	ABUS[23] = #5000 1'b0;
	ABUS[23] = #25000 1'b1;
	ABUS[23] = #10000 1'b0;
	ABUS[23] = #15000 1'b1;
	ABUS[23] = #15000 1'b0;
	ABUS[23] = #5000 1'b1;
	ABUS[23] = #5000 1'b0;
	ABUS[23] = #10000 1'b1;
	ABUS[23] = #5000 1'b0;
	ABUS[23] = #10000 1'b1;
	ABUS[23] = #20000 1'b0;
	ABUS[23] = #5000 1'b1;
	ABUS[23] = #5000 1'b0;
	ABUS[23] = #5000 1'b1;
	ABUS[23] = #20000 1'b0;
end 
// ABUS[ 22 ]
initial
begin
	ABUS[22] = 1'b0;
	ABUS[22] = #5000 1'b1;
	ABUS[22] = #10000 1'b0;
	ABUS[22] = #5000 1'b1;
	ABUS[22] = #10000 1'b0;
	ABUS[22] = #25000 1'b1;
	ABUS[22] = #15000 1'b0;
	ABUS[22] = #5000 1'b1;
	ABUS[22] = #5000 1'b0;
	ABUS[22] = #5000 1'b1;
	ABUS[22] = #5000 1'b0;
	ABUS[22] = #10000 1'b1;
	ABUS[22] = #5000 1'b0;
	ABUS[22] = #5000 1'b1;
	ABUS[22] = #5000 1'b0;
	ABUS[22] = #15000 1'b1;
	ABUS[22] = #25000 1'b0;
	ABUS[22] = #5000 1'b1;
	ABUS[22] = #5000 1'b0;
	ABUS[22] = #5000 1'b1;
	ABUS[22] = #10000 1'b0;
	ABUS[22] = #5000 1'b1;
	ABUS[22] = #5000 1'b0;
	ABUS[22] = #5000 1'b1;
	ABUS[22] = #20000 1'b0;
	ABUS[22] = #15000 1'b1;
	ABUS[22] = #25000 1'b0;
	ABUS[22] = #5000 1'b1;
	ABUS[22] = #5000 1'b0;
	ABUS[22] = #15000 1'b1;
	ABUS[22] = #5000 1'b0;
	ABUS[22] = #10000 1'b1;
	ABUS[22] = #10000 1'b0;
	ABUS[22] = #5000 1'b1;
	ABUS[22] = #15000 1'b0;
	ABUS[22] = #5000 1'b1;
	ABUS[22] = #5000 1'b0;
	ABUS[22] = #5000 1'b1;
	ABUS[22] = #5000 1'b0;
	ABUS[22] = #5000 1'b1;
	ABUS[22] = #10000 1'b0;
	ABUS[22] = #10000 1'b1;
	ABUS[22] = #5000 1'b0;
	ABUS[22] = #20000 1'b1;
	ABUS[22] = #30000 1'b0;
	ABUS[22] = #10000 1'b1;
	ABUS[22] = #15000 1'b0;
	ABUS[22] = #5000 1'b1;
	ABUS[22] = #5000 1'b0;
	ABUS[22] = #15000 1'b1;
	ABUS[22] = #5000 1'b0;
	ABUS[22] = #5000 1'b1;
	ABUS[22] = #15000 1'b0;
	ABUS[22] = #5000 1'b1;
	ABUS[22] = #10000 1'b0;
	ABUS[22] = #5000 1'b1;
	ABUS[22] = #10000 1'b0;
	ABUS[22] = #5000 1'b1;
	ABUS[22] = #20000 1'b0;
	ABUS[22] = #20000 1'b1;
	ABUS[22] = #5000 1'b0;
	ABUS[22] = #15000 1'b1;
	ABUS[22] = #20000 1'b0;
	ABUS[22] = #20000 1'b1;
	ABUS[22] = #10000 1'b0;
	ABUS[22] = #10000 1'b1;
	ABUS[22] = #15000 1'b0;
	ABUS[22] = #35000 1'b1;
	ABUS[22] = #5000 1'b0;
	ABUS[22] = #10000 1'b1;
	ABUS[22] = #10000 1'b0;
	ABUS[22] = #10000 1'b1;
	ABUS[22] = #20000 1'b0;
	ABUS[22] = #5000 1'b1;
	ABUS[22] = #5000 1'b0;
	ABUS[22] = #10000 1'b1;
	ABUS[22] = #20000 1'b0;
	ABUS[22] = #10000 1'b1;
	ABUS[22] = #35000 1'b0;
	ABUS[22] = #5000 1'b1;
	ABUS[22] = #10000 1'b0;
	ABUS[22] = #5000 1'b1;
	ABUS[22] = #5000 1'b0;
	ABUS[22] = #10000 1'b1;
	ABUS[22] = #5000 1'b0;
	ABUS[22] = #25000 1'b1;
	ABUS[22] = #5000 1'b0;
	ABUS[22] = #10000 1'b1;
	ABUS[22] = #5000 1'b0;
	ABUS[22] = #5000 1'b1;
	ABUS[22] = #5000 1'b0;
	ABUS[22] = #5000 1'b1;
	ABUS[22] = #5000 1'b0;
	ABUS[22] = #5000 1'b1;
	ABUS[22] = #15000 1'b0;
	ABUS[22] = #5000 1'b1;
	ABUS[22] = #5000 1'b0;
	ABUS[22] = #5000 1'b1;
	ABUS[22] = #10000 1'b0;
end 
// ABUS[ 21 ]
initial
begin
	ABUS[21] = 1'b1;
	ABUS[21] = #5000 1'b0;
	ABUS[21] = #5000 1'b1;
	ABUS[21] = #5000 1'b0;
	ABUS[21] = #5000 1'b1;
	ABUS[21] = #10000 1'b0;
	ABUS[21] = #20000 1'b1;
	ABUS[21] = #15000 1'b0;
	ABUS[21] = #15000 1'b1;
	ABUS[21] = #25000 1'b0;
	ABUS[21] = #10000 1'b1;
	ABUS[21] = #10000 1'b0;
	ABUS[21] = #10000 1'b1;
	ABUS[21] = #5000 1'b0;
	ABUS[21] = #20000 1'b1;
	ABUS[21] = #10000 1'b0;
	ABUS[21] = #5000 1'b1;
	ABUS[21] = #10000 1'b0;
	ABUS[21] = #5000 1'b1;
	ABUS[21] = #5000 1'b0;
	ABUS[21] = #5000 1'b1;
	ABUS[21] = #10000 1'b0;
	ABUS[21] = #5000 1'b1;
	ABUS[21] = #5000 1'b0;
	ABUS[21] = #25000 1'b1;
	ABUS[21] = #5000 1'b0;
	ABUS[21] = #15000 1'b1;
	ABUS[21] = #5000 1'b0;
	ABUS[21] = #5000 1'b1;
	ABUS[21] = #15000 1'b0;
	ABUS[21] = #5000 1'b1;
	ABUS[21] = #30000 1'b0;
	ABUS[21] = #15000 1'b1;
	ABUS[21] = #15000 1'b0;
	ABUS[21] = #5000 1'b1;
	ABUS[21] = #15000 1'b0;
	ABUS[21] = #5000 1'b1;
	ABUS[21] = #10000 1'b0;
	ABUS[21] = #10000 1'b1;
	ABUS[21] = #5000 1'b0;
	ABUS[21] = #25000 1'b1;
	ABUS[21] = #10000 1'b0;
	ABUS[21] = #5000 1'b1;
	ABUS[21] = #5000 1'b0;
	ABUS[21] = #5000 1'b1;
	ABUS[21] = #5000 1'b0;
	ABUS[21] = #5000 1'b1;
	ABUS[21] = #10000 1'b0;
	ABUS[21] = #5000 1'b1;
	ABUS[21] = #15000 1'b0;
	ABUS[21] = #5000 1'b1;
	ABUS[21] = #10000 1'b0;
	ABUS[21] = #10000 1'b1;
	ABUS[21] = #5000 1'b0;
	ABUS[21] = #30000 1'b1;
	ABUS[21] = #5000 1'b0;
	ABUS[21] = #10000 1'b1;
	ABUS[21] = #15000 1'b0;
	ABUS[21] = #5000 1'b1;
	ABUS[21] = #10000 1'b0;
	ABUS[21] = #10000 1'b1;
	ABUS[21] = #5000 1'b0;
	ABUS[21] = #10000 1'b1;
	ABUS[21] = #5000 1'b0;
	ABUS[21] = #5000 1'b1;
	ABUS[21] = #10000 1'b0;
	ABUS[21] = #5000 1'b1;
	ABUS[21] = #40000 1'b0;
	ABUS[21] = #5000 1'b1;
	ABUS[21] = #15000 1'b0;
	ABUS[21] = #5000 1'b1;
	ABUS[21] = #5000 1'b0;
	ABUS[21] = #5000 1'b1;
	ABUS[21] = #10000 1'b0;
	ABUS[21] = #10000 1'b1;
	ABUS[21] = #5000 1'b0;
	ABUS[21] = #5000 1'b1;
	ABUS[21] = #15000 1'b0;
	ABUS[21] = #10000 1'b1;
	ABUS[21] = #5000 1'b0;
	ABUS[21] = #25000 1'b1;
	ABUS[21] = #5000 1'b0;
	ABUS[21] = #10000 1'b1;
	ABUS[21] = #15000 1'b0;
	ABUS[21] = #20000 1'b1;
	ABUS[21] = #30000 1'b0;
	ABUS[21] = #5000 1'b1;
	ABUS[21] = #20000 1'b0;
	ABUS[21] = #5000 1'b1;
	ABUS[21] = #15000 1'b0;
	ABUS[21] = #5000 1'b1;
	ABUS[21] = #10000 1'b0;
	ABUS[21] = #5000 1'b1;
	ABUS[21] = #15000 1'b0;
	ABUS[21] = #5000 1'b1;
	ABUS[21] = #5000 1'b0;
	ABUS[21] = #10000 1'b1;
end 
// ABUS[ 20 ]
initial
begin
	ABUS[20] = 1'b0;
	ABUS[20] = #15000 1'b1;
	ABUS[20] = #15000 1'b0;
	ABUS[20] = #35000 1'b1;
	ABUS[20] = #5000 1'b0;
	ABUS[20] = #15000 1'b1;
	ABUS[20] = #10000 1'b0;
	ABUS[20] = #10000 1'b1;
	ABUS[20] = #10000 1'b0;
	ABUS[20] = #5000 1'b1;
	ABUS[20] = #5000 1'b0;
	ABUS[20] = #5000 1'b1;
	ABUS[20] = #10000 1'b0;
	ABUS[20] = #10000 1'b1;
	ABUS[20] = #5000 1'b0;
	ABUS[20] = #5000 1'b1;
	ABUS[20] = #15000 1'b0;
	ABUS[20] = #15000 1'b1;
	ABUS[20] = #5000 1'b0;
	ABUS[20] = #5000 1'b1;
	ABUS[20] = #20000 1'b0;
	ABUS[20] = #15000 1'b1;
	ABUS[20] = #10000 1'b0;
	ABUS[20] = #10000 1'b1;
	ABUS[20] = #5000 1'b0;
	ABUS[20] = #5000 1'b1;
	ABUS[20] = #5000 1'b0;
	ABUS[20] = #5000 1'b1;
	ABUS[20] = #10000 1'b0;
	ABUS[20] = #20000 1'b1;
	ABUS[20] = #10000 1'b0;
	ABUS[20] = #20000 1'b1;
	ABUS[20] = #5000 1'b0;
	ABUS[20] = #5000 1'b1;
	ABUS[20] = #10000 1'b0;
	ABUS[20] = #5000 1'b1;
	ABUS[20] = #5000 1'b0;
	ABUS[20] = #5000 1'b1;
	ABUS[20] = #5000 1'b0;
	ABUS[20] = #5000 1'b1;
	ABUS[20] = #5000 1'b0;
	ABUS[20] = #5000 1'b1;
	ABUS[20] = #10000 1'b0;
	ABUS[20] = #5000 1'b1;
	ABUS[20] = #15000 1'b0;
	ABUS[20] = #5000 1'b1;
	ABUS[20] = #15000 1'b0;
	ABUS[20] = #10000 1'b1;
	ABUS[20] = #5000 1'b0;
	ABUS[20] = #15000 1'b1;
	ABUS[20] = #15000 1'b0;
	ABUS[20] = #5000 1'b1;
	ABUS[20] = #5000 1'b0;
	ABUS[20] = #5000 1'b1;
	ABUS[20] = #10000 1'b0;
	ABUS[20] = #25000 1'b1;
	ABUS[20] = #5000 1'b0;
	ABUS[20] = #5000 1'b1;
	ABUS[20] = #10000 1'b0;
	ABUS[20] = #5000 1'b1;
	ABUS[20] = #25000 1'b0;
	ABUS[20] = #5000 1'b1;
	ABUS[20] = #5000 1'b0;
	ABUS[20] = #5000 1'b1;
	ABUS[20] = #25000 1'b0;
	ABUS[20] = #5000 1'b1;
	ABUS[20] = #10000 1'b0;
	ABUS[20] = #10000 1'b1;
	ABUS[20] = #10000 1'b0;
	ABUS[20] = #5000 1'b1;
	ABUS[20] = #15000 1'b0;
	ABUS[20] = #20000 1'b1;
	ABUS[20] = #5000 1'b0;
	ABUS[20] = #30000 1'b1;
	ABUS[20] = #40000 1'b0;
	ABUS[20] = #5000 1'b1;
	ABUS[20] = #15000 1'b0;
	ABUS[20] = #10000 1'b1;
	ABUS[20] = #10000 1'b0;
	ABUS[20] = #15000 1'b1;
	ABUS[20] = #25000 1'b0;
	ABUS[20] = #10000 1'b1;
	ABUS[20] = #15000 1'b0;
	ABUS[20] = #5000 1'b1;
	ABUS[20] = #10000 1'b0;
	ABUS[20] = #10000 1'b1;
	ABUS[20] = #25000 1'b0;
	ABUS[20] = #5000 1'b1;
	ABUS[20] = #5000 1'b0;
	ABUS[20] = #5000 1'b1;
	ABUS[20] = #5000 1'b0;
	ABUS[20] = #10000 1'b1;
	ABUS[20] = #5000 1'b0;
	ABUS[20] = #5000 1'b1;
	ABUS[20] = #5000 1'b0;
	ABUS[20] = #10000 1'b1;
	ABUS[20] = #5000 1'b0;
end 
// ABUS[ 19 ]
initial
begin
	ABUS[19] = 1'b0;
	ABUS[19] = #10000 1'b1;
	ABUS[19] = #5000 1'b0;
	ABUS[19] = #10000 1'b1;
	ABUS[19] = #5000 1'b0;
	ABUS[19] = #30000 1'b1;
	ABUS[19] = #10000 1'b0;
	ABUS[19] = #10000 1'b1;
	ABUS[19] = #10000 1'b0;
	ABUS[19] = #5000 1'b1;
	ABUS[19] = #30000 1'b0;
	ABUS[19] = #10000 1'b1;
	ABUS[19] = #5000 1'b0;
	ABUS[19] = #10000 1'b1;
	ABUS[19] = #5000 1'b0;
	ABUS[19] = #5000 1'b1;
	ABUS[19] = #5000 1'b0;
	ABUS[19] = #15000 1'b1;
	ABUS[19] = #10000 1'b0;
	ABUS[19] = #10000 1'b1;
	ABUS[19] = #10000 1'b0;
	ABUS[19] = #30000 1'b1;
	ABUS[19] = #20000 1'b0;
	ABUS[19] = #10000 1'b1;
	ABUS[19] = #5000 1'b0;
	ABUS[19] = #5000 1'b1;
	ABUS[19] = #10000 1'b0;
	ABUS[19] = #5000 1'b1;
	ABUS[19] = #5000 1'b0;
	ABUS[19] = #10000 1'b1;
	ABUS[19] = #10000 1'b0;
	ABUS[19] = #10000 1'b1;
	ABUS[19] = #15000 1'b0;
	ABUS[19] = #5000 1'b1;
	ABUS[19] = #15000 1'b0;
	ABUS[19] = #15000 1'b1;
	ABUS[19] = #10000 1'b0;
	ABUS[19] = #10000 1'b1;
	ABUS[19] = #5000 1'b0;
	ABUS[19] = #5000 1'b1;
	ABUS[19] = #15000 1'b0;
	ABUS[19] = #10000 1'b1;
	ABUS[19] = #10000 1'b0;
	ABUS[19] = #30000 1'b1;
	ABUS[19] = #5000 1'b0;
	ABUS[19] = #5000 1'b1;
	ABUS[19] = #15000 1'b0;
	ABUS[19] = #5000 1'b1;
	ABUS[19] = #5000 1'b0;
	ABUS[19] = #15000 1'b1;
	ABUS[19] = #5000 1'b0;
	ABUS[19] = #10000 1'b1;
	ABUS[19] = #5000 1'b0;
	ABUS[19] = #10000 1'b1;
	ABUS[19] = #5000 1'b0;
	ABUS[19] = #5000 1'b1;
	ABUS[19] = #5000 1'b0;
	ABUS[19] = #5000 1'b1;
	ABUS[19] = #10000 1'b0;
	ABUS[19] = #5000 1'b1;
	ABUS[19] = #5000 1'b0;
	ABUS[19] = #10000 1'b1;
	ABUS[19] = #10000 1'b0;
	ABUS[19] = #10000 1'b1;
	ABUS[19] = #10000 1'b0;
	ABUS[19] = #5000 1'b1;
	ABUS[19] = #15000 1'b0;
	ABUS[19] = #5000 1'b1;
	ABUS[19] = #5000 1'b0;
	ABUS[19] = #10000 1'b1;
	ABUS[19] = #5000 1'b0;
	ABUS[19] = #5000 1'b1;
	ABUS[19] = #10000 1'b0;
	ABUS[19] = #15000 1'b1;
	ABUS[19] = #20000 1'b0;
	ABUS[19] = #5000 1'b1;
	ABUS[19] = #10000 1'b0;
	ABUS[19] = #10000 1'b1;
	ABUS[19] = #5000 1'b0;
	ABUS[19] = #10000 1'b1;
	ABUS[19] = #15000 1'b0;
	ABUS[19] = #5000 1'b1;
	ABUS[19] = #25000 1'b0;
	ABUS[19] = #5000 1'b1;
	ABUS[19] = #5000 1'b0;
	ABUS[19] = #15000 1'b1;
	ABUS[19] = #5000 1'b0;
	ABUS[19] = #15000 1'b1;
	ABUS[19] = #10000 1'b0;
	ABUS[19] = #5000 1'b1;
	ABUS[19] = #5000 1'b0;
	ABUS[19] = #5000 1'b1;
	ABUS[19] = #20000 1'b0;
	ABUS[19] = #15000 1'b1;
	ABUS[19] = #20000 1'b0;
	ABUS[19] = #5000 1'b1;
	ABUS[19] = #5000 1'b0;
	ABUS[19] = #10000 1'b1;
	ABUS[19] = #5000 1'b0;
	ABUS[19] = #5000 1'b1;
	ABUS[19] = #5000 1'b0;
	ABUS[19] = #10000 1'b1;
	ABUS[19] = #5000 1'b0;
	ABUS[19] = #5000 1'b1;
end 
// ABUS[ 18 ]
initial
begin
	ABUS[18] = 1'b0;
	ABUS[18] = #5000 1'b1;
	ABUS[18] = #15000 1'b0;
	ABUS[18] = #5000 1'b1;
	ABUS[18] = #5000 1'b0;
	ABUS[18] = #5000 1'b1;
	ABUS[18] = #5000 1'b0;
	ABUS[18] = #10000 1'b1;
	ABUS[18] = #5000 1'b0;
	ABUS[18] = #5000 1'b1;
	ABUS[18] = #5000 1'b0;
	ABUS[18] = #10000 1'b1;
	ABUS[18] = #5000 1'b0;
	ABUS[18] = #10000 1'b1;
	ABUS[18] = #5000 1'b0;
	ABUS[18] = #10000 1'b1;
	ABUS[18] = #15000 1'b0;
	ABUS[18] = #5000 1'b1;
	ABUS[18] = #5000 1'b0;
	ABUS[18] = #20000 1'b1;
	ABUS[18] = #25000 1'b0;
	ABUS[18] = #5000 1'b1;
	ABUS[18] = #20000 1'b0;
	ABUS[18] = #5000 1'b1;
	ABUS[18] = #5000 1'b0;
	ABUS[18] = #5000 1'b1;
	ABUS[18] = #10000 1'b0;
	ABUS[18] = #15000 1'b1;
	ABUS[18] = #5000 1'b0;
	ABUS[18] = #40000 1'b1;
	ABUS[18] = #15000 1'b0;
	ABUS[18] = #5000 1'b1;
	ABUS[18] = #10000 1'b0;
	ABUS[18] = #10000 1'b1;
	ABUS[18] = #20000 1'b0;
	ABUS[18] = #5000 1'b1;
	ABUS[18] = #10000 1'b0;
	ABUS[18] = #10000 1'b1;
	ABUS[18] = #5000 1'b0;
	ABUS[18] = #5000 1'b1;
	ABUS[18] = #15000 1'b0;
	ABUS[18] = #15000 1'b1;
	ABUS[18] = #5000 1'b0;
	ABUS[18] = #10000 1'b1;
	ABUS[18] = #5000 1'b0;
	ABUS[18] = #5000 1'b1;
	ABUS[18] = #15000 1'b0;
	ABUS[18] = #5000 1'b1;
	ABUS[18] = #5000 1'b0;
	ABUS[18] = #5000 1'b1;
	ABUS[18] = #35000 1'b0;
	ABUS[18] = #15000 1'b1;
	ABUS[18] = #5000 1'b0;
	ABUS[18] = #10000 1'b1;
	ABUS[18] = #5000 1'b0;
	ABUS[18] = #5000 1'b1;
	ABUS[18] = #20000 1'b0;
	ABUS[18] = #5000 1'b1;
	ABUS[18] = #10000 1'b0;
	ABUS[18] = #25000 1'b1;
	ABUS[18] = #5000 1'b0;
	ABUS[18] = #10000 1'b1;
	ABUS[18] = #5000 1'b0;
	ABUS[18] = #5000 1'b1;
	ABUS[18] = #5000 1'b0;
	ABUS[18] = #10000 1'b1;
	ABUS[18] = #15000 1'b0;
	ABUS[18] = #5000 1'b1;
	ABUS[18] = #10000 1'b0;
	ABUS[18] = #5000 1'b1;
	ABUS[18] = #10000 1'b0;
	ABUS[18] = #5000 1'b1;
	ABUS[18] = #25000 1'b0;
	ABUS[18] = #10000 1'b1;
	ABUS[18] = #5000 1'b0;
	ABUS[18] = #25000 1'b1;
	ABUS[18] = #5000 1'b0;
	ABUS[18] = #15000 1'b1;
	ABUS[18] = #10000 1'b0;
	ABUS[18] = #5000 1'b1;
	ABUS[18] = #5000 1'b0;
	ABUS[18] = #5000 1'b1;
	ABUS[18] = #10000 1'b0;
	ABUS[18] = #20000 1'b1;
	ABUS[18] = #10000 1'b0;
	ABUS[18] = #5000 1'b1;
	ABUS[18] = #20000 1'b0;
	ABUS[18] = #20000 1'b1;
	ABUS[18] = #5000 1'b0;
	ABUS[18] = #10000 1'b1;
	ABUS[18] = #5000 1'b0;
	ABUS[18] = #5000 1'b1;
	ABUS[18] = #5000 1'b0;
	ABUS[18] = #20000 1'b1;
	ABUS[18] = #15000 1'b0;
	ABUS[18] = #5000 1'b1;
	ABUS[18] = #35000 1'b0;
	ABUS[18] = #5000 1'b1;
end 
// ABUS[ 17 ]
initial
begin
	ABUS[17] = 1'b0;
	ABUS[17] = #10000 1'b1;
	ABUS[17] = #5000 1'b0;
	ABUS[17] = #5000 1'b1;
	ABUS[17] = #5000 1'b0;
	ABUS[17] = #10000 1'b1;
	ABUS[17] = #5000 1'b0;
	ABUS[17] = #10000 1'b1;
	ABUS[17] = #5000 1'b0;
	ABUS[17] = #10000 1'b1;
	ABUS[17] = #5000 1'b0;
	ABUS[17] = #5000 1'b1;
	ABUS[17] = #10000 1'b0;
	ABUS[17] = #5000 1'b1;
	ABUS[17] = #5000 1'b0;
	ABUS[17] = #15000 1'b1;
	ABUS[17] = #15000 1'b0;
	ABUS[17] = #5000 1'b1;
	ABUS[17] = #20000 1'b0;
	ABUS[17] = #30000 1'b1;
	ABUS[17] = #10000 1'b0;
	ABUS[17] = #5000 1'b1;
	ABUS[17] = #5000 1'b0;
	ABUS[17] = #5000 1'b1;
	ABUS[17] = #10000 1'b0;
	ABUS[17] = #5000 1'b1;
	ABUS[17] = #5000 1'b0;
	ABUS[17] = #5000 1'b1;
	ABUS[17] = #20000 1'b0;
	ABUS[17] = #5000 1'b1;
	ABUS[17] = #10000 1'b0;
	ABUS[17] = #5000 1'b1;
	ABUS[17] = #15000 1'b0;
	ABUS[17] = #5000 1'b1;
	ABUS[17] = #5000 1'b0;
	ABUS[17] = #10000 1'b1;
	ABUS[17] = #10000 1'b0;
	ABUS[17] = #5000 1'b1;
	ABUS[17] = #20000 1'b0;
	ABUS[17] = #5000 1'b1;
	ABUS[17] = #15000 1'b0;
	ABUS[17] = #5000 1'b1;
	ABUS[17] = #5000 1'b0;
	ABUS[17] = #15000 1'b1;
	ABUS[17] = #5000 1'b0;
	ABUS[17] = #15000 1'b1;
	ABUS[17] = #10000 1'b0;
	ABUS[17] = #5000 1'b1;
	ABUS[17] = #5000 1'b0;
	ABUS[17] = #5000 1'b1;
	ABUS[17] = #5000 1'b0;
	ABUS[17] = #15000 1'b1;
	ABUS[17] = #10000 1'b0;
	ABUS[17] = #30000 1'b1;
	ABUS[17] = #5000 1'b0;
	ABUS[17] = #5000 1'b1;
	ABUS[17] = #5000 1'b0;
	ABUS[17] = #5000 1'b1;
	ABUS[17] = #5000 1'b0;
	ABUS[17] = #5000 1'b1;
	ABUS[17] = #20000 1'b0;
	ABUS[17] = #5000 1'b1;
	ABUS[17] = #5000 1'b0;
	ABUS[17] = #15000 1'b1;
	ABUS[17] = #10000 1'b0;
	ABUS[17] = #10000 1'b1;
	ABUS[17] = #5000 1'b0;
	ABUS[17] = #10000 1'b1;
	ABUS[17] = #15000 1'b0;
	ABUS[17] = #5000 1'b1;
	ABUS[17] = #10000 1'b0;
	ABUS[17] = #5000 1'b1;
	ABUS[17] = #15000 1'b0;
	ABUS[17] = #5000 1'b1;
	ABUS[17] = #5000 1'b0;
	ABUS[17] = #5000 1'b1;
	ABUS[17] = #10000 1'b0;
	ABUS[17] = #15000 1'b1;
	ABUS[17] = #15000 1'b0;
	ABUS[17] = #10000 1'b1;
	ABUS[17] = #5000 1'b0;
	ABUS[17] = #10000 1'b1;
	ABUS[17] = #10000 1'b0;
	ABUS[17] = #45000 1'b1;
	ABUS[17] = #10000 1'b0;
	ABUS[17] = #10000 1'b1;
	ABUS[17] = #5000 1'b0;
	ABUS[17] = #5000 1'b1;
	ABUS[17] = #10000 1'b0;
	ABUS[17] = #15000 1'b1;
	ABUS[17] = #5000 1'b0;
	ABUS[17] = #5000 1'b1;
	ABUS[17] = #5000 1'b0;
	ABUS[17] = #5000 1'b1;
	ABUS[17] = #5000 1'b0;
	ABUS[17] = #5000 1'b1;
	ABUS[17] = #15000 1'b0;
	ABUS[17] = #5000 1'b1;
	ABUS[17] = #15000 1'b0;
	ABUS[17] = #15000 1'b1;
	ABUS[17] = #5000 1'b0;
	ABUS[17] = #5000 1'b1;
	ABUS[17] = #5000 1'b0;
	ABUS[17] = #10000 1'b1;
	ABUS[17] = #5000 1'b0;
	ABUS[17] = #10000 1'b1;
	ABUS[17] = #5000 1'b0;
	ABUS[17] = #5000 1'b1;
	ABUS[17] = #15000 1'b0;
end 
// ABUS[ 16 ]
initial
begin
	ABUS[16] = 1'b0;
	ABUS[16] = #10000 1'b1;
	ABUS[16] = #5000 1'b0;
	ABUS[16] = #20000 1'b1;
	ABUS[16] = #5000 1'b0;
	ABUS[16] = #10000 1'b1;
	ABUS[16] = #5000 1'b0;
	ABUS[16] = #5000 1'b1;
	ABUS[16] = #5000 1'b0;
	ABUS[16] = #35000 1'b1;
	ABUS[16] = #10000 1'b0;
	ABUS[16] = #5000 1'b1;
	ABUS[16] = #25000 1'b0;
	ABUS[16] = #5000 1'b1;
	ABUS[16] = #10000 1'b0;
	ABUS[16] = #5000 1'b1;
	ABUS[16] = #35000 1'b0;
	ABUS[16] = #25000 1'b1;
	ABUS[16] = #15000 1'b0;
	ABUS[16] = #5000 1'b1;
	ABUS[16] = #10000 1'b0;
	ABUS[16] = #10000 1'b1;
	ABUS[16] = #5000 1'b0;
	ABUS[16] = #5000 1'b1;
	ABUS[16] = #5000 1'b0;
	ABUS[16] = #5000 1'b1;
	ABUS[16] = #10000 1'b0;
	ABUS[16] = #5000 1'b1;
	ABUS[16] = #5000 1'b0;
	ABUS[16] = #5000 1'b1;
	ABUS[16] = #5000 1'b0;
	ABUS[16] = #10000 1'b1;
	ABUS[16] = #5000 1'b0;
	ABUS[16] = #10000 1'b1;
	ABUS[16] = #15000 1'b0;
	ABUS[16] = #10000 1'b1;
	ABUS[16] = #20000 1'b0;
	ABUS[16] = #20000 1'b1;
	ABUS[16] = #10000 1'b0;
	ABUS[16] = #30000 1'b1;
	ABUS[16] = #5000 1'b0;
	ABUS[16] = #15000 1'b1;
	ABUS[16] = #10000 1'b0;
	ABUS[16] = #10000 1'b1;
	ABUS[16] = #5000 1'b0;
	ABUS[16] = #5000 1'b1;
	ABUS[16] = #5000 1'b0;
	ABUS[16] = #30000 1'b1;
	ABUS[16] = #15000 1'b0;
	ABUS[16] = #5000 1'b1;
	ABUS[16] = #10000 1'b0;
	ABUS[16] = #5000 1'b1;
	ABUS[16] = #10000 1'b0;
	ABUS[16] = #10000 1'b1;
	ABUS[16] = #10000 1'b0;
	ABUS[16] = #5000 1'b1;
	ABUS[16] = #25000 1'b0;
	ABUS[16] = #20000 1'b1;
	ABUS[16] = #5000 1'b0;
	ABUS[16] = #5000 1'b1;
	ABUS[16] = #5000 1'b0;
	ABUS[16] = #10000 1'b1;
	ABUS[16] = #5000 1'b0;
	ABUS[16] = #10000 1'b1;
	ABUS[16] = #10000 1'b0;
	ABUS[16] = #10000 1'b1;
	ABUS[16] = #15000 1'b0;
	ABUS[16] = #5000 1'b1;
	ABUS[16] = #25000 1'b0;
	ABUS[16] = #5000 1'b1;
	ABUS[16] = #5000 1'b0;
	ABUS[16] = #5000 1'b1;
	ABUS[16] = #5000 1'b0;
	ABUS[16] = #5000 1'b1;
	ABUS[16] = #5000 1'b0;
	ABUS[16] = #25000 1'b1;
	ABUS[16] = #10000 1'b0;
	ABUS[16] = #5000 1'b1;
	ABUS[16] = #15000 1'b0;
	ABUS[16] = #30000 1'b1;
	ABUS[16] = #15000 1'b0;
	ABUS[16] = #5000 1'b1;
	ABUS[16] = #5000 1'b0;
	ABUS[16] = #5000 1'b1;
	ABUS[16] = #10000 1'b0;
	ABUS[16] = #10000 1'b1;
	ABUS[16] = #10000 1'b0;
	ABUS[16] = #10000 1'b1;
	ABUS[16] = #5000 1'b0;
	ABUS[16] = #5000 1'b1;
	ABUS[16] = #35000 1'b0;
end 
// ABUS[ 15 ]
initial
begin
	ABUS[15] = 1'b0;
	ABUS[15] = #10000 1'b1;
	ABUS[15] = #5000 1'b0;
	ABUS[15] = #5000 1'b1;
	ABUS[15] = #5000 1'b0;
	ABUS[15] = #5000 1'b1;
	ABUS[15] = #10000 1'b0;
	ABUS[15] = #10000 1'b1;
	ABUS[15] = #5000 1'b0;
	ABUS[15] = #10000 1'b1;
	ABUS[15] = #10000 1'b0;
	ABUS[15] = #5000 1'b1;
	ABUS[15] = #10000 1'b0;
	ABUS[15] = #5000 1'b1;
	ABUS[15] = #10000 1'b0;
	ABUS[15] = #10000 1'b1;
	ABUS[15] = #5000 1'b0;
	ABUS[15] = #5000 1'b1;
	ABUS[15] = #25000 1'b0;
	ABUS[15] = #35000 1'b1;
	ABUS[15] = #15000 1'b0;
	ABUS[15] = #5000 1'b1;
	ABUS[15] = #5000 1'b0;
	ABUS[15] = #5000 1'b1;
	ABUS[15] = #15000 1'b0;
	ABUS[15] = #10000 1'b1;
	ABUS[15] = #5000 1'b0;
	ABUS[15] = #5000 1'b1;
	ABUS[15] = #10000 1'b0;
	ABUS[15] = #5000 1'b1;
	ABUS[15] = #15000 1'b0;
	ABUS[15] = #5000 1'b1;
	ABUS[15] = #5000 1'b0;
	ABUS[15] = #15000 1'b1;
	ABUS[15] = #10000 1'b0;
	ABUS[15] = #15000 1'b1;
	ABUS[15] = #5000 1'b0;
	ABUS[15] = #10000 1'b1;
	ABUS[15] = #25000 1'b0;
	ABUS[15] = #15000 1'b1;
	ABUS[15] = #20000 1'b0;
	ABUS[15] = #15000 1'b1;
	ABUS[15] = #15000 1'b0;
	ABUS[15] = #5000 1'b1;
	ABUS[15] = #5000 1'b0;
	ABUS[15] = #5000 1'b1;
	ABUS[15] = #10000 1'b0;
	ABUS[15] = #5000 1'b1;
	ABUS[15] = #10000 1'b0;
	ABUS[15] = #10000 1'b1;
	ABUS[15] = #5000 1'b0;
	ABUS[15] = #10000 1'b1;
	ABUS[15] = #15000 1'b0;
	ABUS[15] = #10000 1'b1;
	ABUS[15] = #5000 1'b0;
	ABUS[15] = #5000 1'b1;
	ABUS[15] = #15000 1'b0;
	ABUS[15] = #20000 1'b1;
	ABUS[15] = #5000 1'b0;
	ABUS[15] = #5000 1'b1;
	ABUS[15] = #10000 1'b0;
	ABUS[15] = #45000 1'b1;
	ABUS[15] = #5000 1'b0;
	ABUS[15] = #5000 1'b1;
	ABUS[15] = #5000 1'b0;
	ABUS[15] = #10000 1'b1;
	ABUS[15] = #15000 1'b0;
	ABUS[15] = #5000 1'b1;
	ABUS[15] = #15000 1'b0;
	ABUS[15] = #15000 1'b1;
	ABUS[15] = #30000 1'b0;
	ABUS[15] = #10000 1'b1;
	ABUS[15] = #10000 1'b0;
	ABUS[15] = #10000 1'b1;
	ABUS[15] = #10000 1'b0;
	ABUS[15] = #10000 1'b1;
	ABUS[15] = #25000 1'b0;
	ABUS[15] = #5000 1'b1;
	ABUS[15] = #5000 1'b0;
	ABUS[15] = #5000 1'b1;
	ABUS[15] = #25000 1'b0;
	ABUS[15] = #20000 1'b1;
	ABUS[15] = #25000 1'b0;
	ABUS[15] = #5000 1'b1;
	ABUS[15] = #10000 1'b0;
	ABUS[15] = #5000 1'b1;
	ABUS[15] = #15000 1'b0;
	ABUS[15] = #10000 1'b1;
	ABUS[15] = #15000 1'b0;
	ABUS[15] = #20000 1'b1;
	ABUS[15] = #5000 1'b0;
	ABUS[15] = #5000 1'b1;
	ABUS[15] = #5000 1'b0;
end 
// ABUS[ 14 ]
initial
begin
	ABUS[14] = 1'b0;
	ABUS[14] = #5000 1'b1;
	ABUS[14] = #5000 1'b0;
	ABUS[14] = #5000 1'b1;
	ABUS[14] = #5000 1'b0;
	ABUS[14] = #5000 1'b1;
	ABUS[14] = #10000 1'b0;
	ABUS[14] = #25000 1'b1;
	ABUS[14] = #10000 1'b0;
	ABUS[14] = #10000 1'b1;
	ABUS[14] = #10000 1'b0;
	ABUS[14] = #10000 1'b1;
	ABUS[14] = #5000 1'b0;
	ABUS[14] = #15000 1'b1;
	ABUS[14] = #10000 1'b0;
	ABUS[14] = #5000 1'b1;
	ABUS[14] = #10000 1'b0;
	ABUS[14] = #5000 1'b1;
	ABUS[14] = #5000 1'b0;
	ABUS[14] = #20000 1'b1;
	ABUS[14] = #5000 1'b0;
	ABUS[14] = #5000 1'b1;
	ABUS[14] = #5000 1'b0;
	ABUS[14] = #10000 1'b1;
	ABUS[14] = #10000 1'b0;
	ABUS[14] = #5000 1'b1;
	ABUS[14] = #5000 1'b0;
	ABUS[14] = #5000 1'b1;
	ABUS[14] = #5000 1'b0;
	ABUS[14] = #5000 1'b1;
	ABUS[14] = #15000 1'b0;
	ABUS[14] = #5000 1'b1;
	ABUS[14] = #20000 1'b0;
	ABUS[14] = #10000 1'b1;
	ABUS[14] = #15000 1'b0;
	ABUS[14] = #15000 1'b1;
	ABUS[14] = #5000 1'b0;
	ABUS[14] = #5000 1'b1;
	ABUS[14] = #5000 1'b0;
	ABUS[14] = #5000 1'b1;
	ABUS[14] = #5000 1'b0;
	ABUS[14] = #10000 1'b1;
	ABUS[14] = #15000 1'b0;
	ABUS[14] = #5000 1'b1;
	ABUS[14] = #5000 1'b0;
	ABUS[14] = #5000 1'b1;
	ABUS[14] = #10000 1'b0;
	ABUS[14] = #10000 1'b1;
	ABUS[14] = #20000 1'b0;
	ABUS[14] = #5000 1'b1;
	ABUS[14] = #25000 1'b0;
	ABUS[14] = #10000 1'b1;
	ABUS[14] = #5000 1'b0;
	ABUS[14] = #5000 1'b1;
	ABUS[14] = #5000 1'b0;
	ABUS[14] = #10000 1'b1;
	ABUS[14] = #5000 1'b0;
	ABUS[14] = #5000 1'b1;
	ABUS[14] = #5000 1'b0;
	ABUS[14] = #5000 1'b1;
	ABUS[14] = #5000 1'b0;
	ABUS[14] = #5000 1'b1;
	ABUS[14] = #10000 1'b0;
	ABUS[14] = #5000 1'b1;
	ABUS[14] = #10000 1'b0;
	ABUS[14] = #10000 1'b1;
	ABUS[14] = #15000 1'b0;
	ABUS[14] = #20000 1'b1;
	ABUS[14] = #5000 1'b0;
	ABUS[14] = #10000 1'b1;
	ABUS[14] = #5000 1'b0;
	ABUS[14] = #25000 1'b1;
	ABUS[14] = #10000 1'b0;
	ABUS[14] = #5000 1'b1;
	ABUS[14] = #5000 1'b0;
	ABUS[14] = #5000 1'b1;
	ABUS[14] = #25000 1'b0;
	ABUS[14] = #40000 1'b1;
	ABUS[14] = #5000 1'b0;
	ABUS[14] = #25000 1'b1;
	ABUS[14] = #5000 1'b0;
	ABUS[14] = #20000 1'b1;
	ABUS[14] = #15000 1'b0;
	ABUS[14] = #10000 1'b1;
	ABUS[14] = #20000 1'b0;
	ABUS[14] = #5000 1'b1;
	ABUS[14] = #5000 1'b0;
	ABUS[14] = #10000 1'b1;
	ABUS[14] = #10000 1'b0;
	ABUS[14] = #5000 1'b1;
	ABUS[14] = #15000 1'b0;
	ABUS[14] = #5000 1'b1;
	ABUS[14] = #5000 1'b0;
	ABUS[14] = #10000 1'b1;
	ABUS[14] = #30000 1'b0;
	ABUS[14] = #15000 1'b1;
	ABUS[14] = #15000 1'b0;
	ABUS[14] = #5000 1'b1;
	ABUS[14] = #15000 1'b0;
	ABUS[14] = #5000 1'b1;
	ABUS[14] = #5000 1'b0;
	ABUS[14] = #5000 1'b1;
	ABUS[14] = #10000 1'b0;
end 
// ABUS[ 13 ]
initial
begin
	ABUS[13] = 1'b0;
	ABUS[13] = #5000 1'b1;
	ABUS[13] = #10000 1'b0;
	ABUS[13] = #15000 1'b1;
	ABUS[13] = #5000 1'b0;
	ABUS[13] = #20000 1'b1;
	ABUS[13] = #15000 1'b0;
	ABUS[13] = #15000 1'b1;
	ABUS[13] = #5000 1'b0;
	ABUS[13] = #40000 1'b1;
	ABUS[13] = #5000 1'b0;
	ABUS[13] = #25000 1'b1;
	ABUS[13] = #25000 1'b0;
	ABUS[13] = #5000 1'b1;
	ABUS[13] = #15000 1'b0;
	ABUS[13] = #20000 1'b1;
	ABUS[13] = #5000 1'b0;
	ABUS[13] = #5000 1'b1;
	ABUS[13] = #10000 1'b0;
	ABUS[13] = #5000 1'b1;
	ABUS[13] = #5000 1'b0;
	ABUS[13] = #15000 1'b1;
	ABUS[13] = #15000 1'b0;
	ABUS[13] = #10000 1'b1;
	ABUS[13] = #5000 1'b0;
	ABUS[13] = #5000 1'b1;
	ABUS[13] = #5000 1'b0;
	ABUS[13] = #15000 1'b1;
	ABUS[13] = #5000 1'b0;
	ABUS[13] = #5000 1'b1;
	ABUS[13] = #5000 1'b0;
	ABUS[13] = #5000 1'b1;
	ABUS[13] = #10000 1'b0;
	ABUS[13] = #5000 1'b1;
	ABUS[13] = #5000 1'b0;
	ABUS[13] = #5000 1'b1;
	ABUS[13] = #5000 1'b0;
	ABUS[13] = #10000 1'b1;
	ABUS[13] = #5000 1'b0;
	ABUS[13] = #10000 1'b1;
	ABUS[13] = #5000 1'b0;
	ABUS[13] = #15000 1'b1;
	ABUS[13] = #5000 1'b0;
	ABUS[13] = #10000 1'b1;
	ABUS[13] = #5000 1'b0;
	ABUS[13] = #25000 1'b1;
	ABUS[13] = #5000 1'b0;
	ABUS[13] = #20000 1'b1;
	ABUS[13] = #5000 1'b0;
	ABUS[13] = #10000 1'b1;
	ABUS[13] = #5000 1'b0;
	ABUS[13] = #15000 1'b1;
	ABUS[13] = #5000 1'b0;
	ABUS[13] = #20000 1'b1;
	ABUS[13] = #10000 1'b0;
	ABUS[13] = #10000 1'b1;
	ABUS[13] = #5000 1'b0;
	ABUS[13] = #15000 1'b1;
	ABUS[13] = #5000 1'b0;
	ABUS[13] = #10000 1'b1;
	ABUS[13] = #5000 1'b0;
	ABUS[13] = #10000 1'b1;
	ABUS[13] = #15000 1'b0;
	ABUS[13] = #5000 1'b1;
	ABUS[13] = #5000 1'b0;
	ABUS[13] = #5000 1'b1;
	ABUS[13] = #5000 1'b0;
	ABUS[13] = #5000 1'b1;
	ABUS[13] = #25000 1'b0;
	ABUS[13] = #5000 1'b1;
	ABUS[13] = #5000 1'b0;
	ABUS[13] = #10000 1'b1;
	ABUS[13] = #5000 1'b0;
	ABUS[13] = #15000 1'b1;
	ABUS[13] = #15000 1'b0;
	ABUS[13] = #10000 1'b1;
	ABUS[13] = #15000 1'b0;
	ABUS[13] = #5000 1'b1;
	ABUS[13] = #10000 1'b0;
	ABUS[13] = #5000 1'b1;
	ABUS[13] = #10000 1'b0;
	ABUS[13] = #5000 1'b1;
	ABUS[13] = #5000 1'b0;
	ABUS[13] = #5000 1'b1;
	ABUS[13] = #10000 1'b0;
	ABUS[13] = #5000 1'b1;
	ABUS[13] = #5000 1'b0;
	ABUS[13] = #10000 1'b1;
	ABUS[13] = #15000 1'b0;
	ABUS[13] = #10000 1'b1;
	ABUS[13] = #5000 1'b0;
	ABUS[13] = #5000 1'b1;
	ABUS[13] = #10000 1'b0;
	ABUS[13] = #5000 1'b1;
	ABUS[13] = #5000 1'b0;
	ABUS[13] = #5000 1'b1;
	ABUS[13] = #5000 1'b0;
	ABUS[13] = #5000 1'b1;
	ABUS[13] = #15000 1'b0;
	ABUS[13] = #10000 1'b1;
	ABUS[13] = #10000 1'b0;
	ABUS[13] = #15000 1'b1;
	ABUS[13] = #25000 1'b0;
	ABUS[13] = #5000 1'b1;
	ABUS[13] = #5000 1'b0;
end 
// ABUS[ 12 ]
initial
begin
	ABUS[12] = 1'b1;
	ABUS[12] = #5000 1'b0;
	ABUS[12] = #5000 1'b1;
	ABUS[12] = #5000 1'b0;
	ABUS[12] = #10000 1'b1;
	ABUS[12] = #10000 1'b0;
	ABUS[12] = #15000 1'b1;
	ABUS[12] = #20000 1'b0;
	ABUS[12] = #10000 1'b1;
	ABUS[12] = #15000 1'b0;
	ABUS[12] = #15000 1'b1;
	ABUS[12] = #10000 1'b0;
	ABUS[12] = #10000 1'b1;
	ABUS[12] = #5000 1'b0;
	ABUS[12] = #10000 1'b1;
	ABUS[12] = #5000 1'b0;
	ABUS[12] = #5000 1'b1;
	ABUS[12] = #10000 1'b0;
	ABUS[12] = #5000 1'b1;
	ABUS[12] = #5000 1'b0;
	ABUS[12] = #15000 1'b1;
	ABUS[12] = #5000 1'b0;
	ABUS[12] = #10000 1'b1;
	ABUS[12] = #5000 1'b0;
	ABUS[12] = #15000 1'b1;
	ABUS[12] = #5000 1'b0;
	ABUS[12] = #10000 1'b1;
	ABUS[12] = #5000 1'b0;
	ABUS[12] = #20000 1'b1;
	ABUS[12] = #15000 1'b0;
	ABUS[12] = #25000 1'b1;
	ABUS[12] = #20000 1'b0;
	ABUS[12] = #15000 1'b1;
	ABUS[12] = #20000 1'b0;
	ABUS[12] = #10000 1'b1;
	ABUS[12] = #5000 1'b0;
	ABUS[12] = #5000 1'b1;
	ABUS[12] = #10000 1'b0;
	ABUS[12] = #5000 1'b1;
	ABUS[12] = #5000 1'b0;
	ABUS[12] = #5000 1'b1;
	ABUS[12] = #5000 1'b0;
	ABUS[12] = #5000 1'b1;
	ABUS[12] = #10000 1'b0;
	ABUS[12] = #10000 1'b1;
	ABUS[12] = #35000 1'b0;
	ABUS[12] = #5000 1'b1;
	ABUS[12] = #5000 1'b0;
	ABUS[12] = #5000 1'b1;
	ABUS[12] = #10000 1'b0;
	ABUS[12] = #10000 1'b1;
	ABUS[12] = #5000 1'b0;
	ABUS[12] = #5000 1'b1;
	ABUS[12] = #10000 1'b0;
	ABUS[12] = #10000 1'b1;
	ABUS[12] = #5000 1'b0;
	ABUS[12] = #5000 1'b1;
	ABUS[12] = #15000 1'b0;
	ABUS[12] = #5000 1'b1;
	ABUS[12] = #5000 1'b0;
	ABUS[12] = #10000 1'b1;
	ABUS[12] = #5000 1'b0;
	ABUS[12] = #5000 1'b1;
	ABUS[12] = #5000 1'b0;
	ABUS[12] = #15000 1'b1;
	ABUS[12] = #15000 1'b0;
	ABUS[12] = #30000 1'b1;
	ABUS[12] = #5000 1'b0;
	ABUS[12] = #20000 1'b1;
	ABUS[12] = #5000 1'b0;
	ABUS[12] = #15000 1'b1;
	ABUS[12] = #5000 1'b0;
	ABUS[12] = #10000 1'b1;
	ABUS[12] = #10000 1'b0;
	ABUS[12] = #5000 1'b1;
	ABUS[12] = #15000 1'b0;
	ABUS[12] = #5000 1'b1;
	ABUS[12] = #5000 1'b0;
	ABUS[12] = #5000 1'b1;
	ABUS[12] = #30000 1'b0;
	ABUS[12] = #10000 1'b1;
	ABUS[12] = #30000 1'b0;
	ABUS[12] = #10000 1'b1;
	ABUS[12] = #10000 1'b0;
	ABUS[12] = #5000 1'b1;
	ABUS[12] = #25000 1'b0;
	ABUS[12] = #5000 1'b1;
	ABUS[12] = #25000 1'b0;
	ABUS[12] = #5000 1'b1;
	ABUS[12] = #5000 1'b0;
	ABUS[12] = #5000 1'b1;
	ABUS[12] = #15000 1'b0;
	ABUS[12] = #10000 1'b1;
	ABUS[12] = #5000 1'b0;
	ABUS[12] = #15000 1'b1;
	ABUS[12] = #5000 1'b0;
	ABUS[12] = #5000 1'b1;
	ABUS[12] = #5000 1'b0;
	ABUS[12] = #5000 1'b1;
end 
// ABUS[ 11 ]
initial
begin
	ABUS[11] = 1'b0;
	ABUS[11] = #5000 1'b1;
	ABUS[11] = #5000 1'b0;
	ABUS[11] = #5000 1'b1;
	ABUS[11] = #25000 1'b0;
	ABUS[11] = #15000 1'b1;
	ABUS[11] = #20000 1'b0;
	ABUS[11] = #5000 1'b1;
	ABUS[11] = #5000 1'b0;
	ABUS[11] = #5000 1'b1;
	ABUS[11] = #5000 1'b0;
	ABUS[11] = #5000 1'b1;
	ABUS[11] = #5000 1'b0;
	ABUS[11] = #5000 1'b1;
	ABUS[11] = #5000 1'b0;
	ABUS[11] = #5000 1'b1;
	ABUS[11] = #5000 1'b0;
	ABUS[11] = #20000 1'b1;
	ABUS[11] = #15000 1'b0;
	ABUS[11] = #5000 1'b1;
	ABUS[11] = #5000 1'b0;
	ABUS[11] = #10000 1'b1;
	ABUS[11] = #15000 1'b0;
	ABUS[11] = #20000 1'b1;
	ABUS[11] = #5000 1'b0;
	ABUS[11] = #10000 1'b1;
	ABUS[11] = #5000 1'b0;
	ABUS[11] = #5000 1'b1;
	ABUS[11] = #10000 1'b0;
	ABUS[11] = #5000 1'b1;
	ABUS[11] = #5000 1'b0;
	ABUS[11] = #10000 1'b1;
	ABUS[11] = #5000 1'b0;
	ABUS[11] = #5000 1'b1;
	ABUS[11] = #10000 1'b0;
	ABUS[11] = #5000 1'b1;
	ABUS[11] = #40000 1'b0;
	ABUS[11] = #5000 1'b1;
	ABUS[11] = #5000 1'b0;
	ABUS[11] = #5000 1'b1;
	ABUS[11] = #5000 1'b0;
	ABUS[11] = #15000 1'b1;
	ABUS[11] = #10000 1'b0;
	ABUS[11] = #5000 1'b1;
	ABUS[11] = #5000 1'b0;
	ABUS[11] = #5000 1'b1;
	ABUS[11] = #40000 1'b0;
	ABUS[11] = #15000 1'b1;
	ABUS[11] = #20000 1'b0;
	ABUS[11] = #25000 1'b1;
	ABUS[11] = #5000 1'b0;
	ABUS[11] = #5000 1'b1;
	ABUS[11] = #15000 1'b0;
	ABUS[11] = #10000 1'b1;
	ABUS[11] = #10000 1'b0;
	ABUS[11] = #10000 1'b1;
	ABUS[11] = #5000 1'b0;
	ABUS[11] = #5000 1'b1;
	ABUS[11] = #5000 1'b0;
	ABUS[11] = #10000 1'b1;
	ABUS[11] = #5000 1'b0;
	ABUS[11] = #45000 1'b1;
	ABUS[11] = #5000 1'b0;
	ABUS[11] = #10000 1'b1;
	ABUS[11] = #5000 1'b0;
	ABUS[11] = #10000 1'b1;
	ABUS[11] = #5000 1'b0;
	ABUS[11] = #10000 1'b1;
	ABUS[11] = #15000 1'b0;
	ABUS[11] = #10000 1'b1;
	ABUS[11] = #5000 1'b0;
	ABUS[11] = #15000 1'b1;
	ABUS[11] = #30000 1'b0;
	ABUS[11] = #5000 1'b1;
	ABUS[11] = #5000 1'b0;
	ABUS[11] = #10000 1'b1;
	ABUS[11] = #10000 1'b0;
	ABUS[11] = #15000 1'b1;
	ABUS[11] = #5000 1'b0;
	ABUS[11] = #20000 1'b1;
	ABUS[11] = #10000 1'b0;
	ABUS[11] = #10000 1'b1;
	ABUS[11] = #15000 1'b0;
	ABUS[11] = #30000 1'b1;
	ABUS[11] = #5000 1'b0;
	ABUS[11] = #5000 1'b1;
	ABUS[11] = #5000 1'b0;
	ABUS[11] = #5000 1'b1;
	ABUS[11] = #5000 1'b0;
	ABUS[11] = #20000 1'b1;
	ABUS[11] = #20000 1'b0;
	ABUS[11] = #15000 1'b1;
	ABUS[11] = #10000 1'b0;
	ABUS[11] = #5000 1'b1;
	ABUS[11] = #10000 1'b0;
	ABUS[11] = #5000 1'b1;
end 
// ABUS[ 10 ]
initial
begin
	ABUS[10] = 1'b0;
	ABUS[10] = #10000 1'b1;
	ABUS[10] = #5000 1'b0;
	ABUS[10] = #5000 1'b1;
	ABUS[10] = #20000 1'b0;
	ABUS[10] = #15000 1'b1;
	ABUS[10] = #5000 1'b0;
	ABUS[10] = #5000 1'b1;
	ABUS[10] = #10000 1'b0;
	ABUS[10] = #5000 1'b1;
	ABUS[10] = #15000 1'b0;
	ABUS[10] = #25000 1'b1;
	ABUS[10] = #10000 1'b0;
	ABUS[10] = #10000 1'b1;
	ABUS[10] = #10000 1'b0;
	ABUS[10] = #5000 1'b1;
	ABUS[10] = #5000 1'b0;
	ABUS[10] = #15000 1'b1;
	ABUS[10] = #10000 1'b0;
	ABUS[10] = #20000 1'b1;
	ABUS[10] = #5000 1'b0;
	ABUS[10] = #20000 1'b1;
	ABUS[10] = #20000 1'b0;
	ABUS[10] = #5000 1'b1;
	ABUS[10] = #5000 1'b0;
	ABUS[10] = #20000 1'b1;
	ABUS[10] = #5000 1'b0;
	ABUS[10] = #5000 1'b1;
	ABUS[10] = #10000 1'b0;
	ABUS[10] = #20000 1'b1;
	ABUS[10] = #5000 1'b0;
	ABUS[10] = #10000 1'b1;
	ABUS[10] = #5000 1'b0;
	ABUS[10] = #5000 1'b1;
	ABUS[10] = #20000 1'b0;
	ABUS[10] = #5000 1'b1;
	ABUS[10] = #5000 1'b0;
	ABUS[10] = #5000 1'b1;
	ABUS[10] = #10000 1'b0;
	ABUS[10] = #5000 1'b1;
	ABUS[10] = #5000 1'b0;
	ABUS[10] = #20000 1'b1;
	ABUS[10] = #15000 1'b0;
	ABUS[10] = #5000 1'b1;
	ABUS[10] = #10000 1'b0;
	ABUS[10] = #20000 1'b1;
	ABUS[10] = #5000 1'b0;
	ABUS[10] = #10000 1'b1;
	ABUS[10] = #5000 1'b0;
	ABUS[10] = #10000 1'b1;
	ABUS[10] = #10000 1'b0;
	ABUS[10] = #25000 1'b1;
	ABUS[10] = #5000 1'b0;
	ABUS[10] = #5000 1'b1;
	ABUS[10] = #5000 1'b0;
	ABUS[10] = #10000 1'b1;
	ABUS[10] = #25000 1'b0;
	ABUS[10] = #5000 1'b1;
	ABUS[10] = #15000 1'b0;
	ABUS[10] = #5000 1'b1;
	ABUS[10] = #15000 1'b0;
	ABUS[10] = #10000 1'b1;
	ABUS[10] = #5000 1'b0;
	ABUS[10] = #20000 1'b1;
	ABUS[10] = #5000 1'b0;
	ABUS[10] = #5000 1'b1;
	ABUS[10] = #10000 1'b0;
	ABUS[10] = #15000 1'b1;
	ABUS[10] = #20000 1'b0;
	ABUS[10] = #10000 1'b1;
	ABUS[10] = #5000 1'b0;
	ABUS[10] = #25000 1'b1;
	ABUS[10] = #10000 1'b0;
	ABUS[10] = #5000 1'b1;
	ABUS[10] = #5000 1'b0;
	ABUS[10] = #5000 1'b1;
	ABUS[10] = #5000 1'b0;
	ABUS[10] = #10000 1'b1;
	ABUS[10] = #5000 1'b0;
	ABUS[10] = #15000 1'b1;
	ABUS[10] = #5000 1'b0;
	ABUS[10] = #5000 1'b1;
	ABUS[10] = #5000 1'b0;
	ABUS[10] = #5000 1'b1;
	ABUS[10] = #25000 1'b0;
	ABUS[10] = #15000 1'b1;
	ABUS[10] = #15000 1'b0;
	ABUS[10] = #5000 1'b1;
	ABUS[10] = #5000 1'b0;
	ABUS[10] = #10000 1'b1;
	ABUS[10] = #10000 1'b0;
	ABUS[10] = #10000 1'b1;
	ABUS[10] = #25000 1'b0;
	ABUS[10] = #5000 1'b1;
	ABUS[10] = #20000 1'b0;
	ABUS[10] = #10000 1'b1;
	ABUS[10] = #5000 1'b0;
end 
// ABUS[ 9 ]
initial
begin
	ABUS[9] = 1'b1;
	ABUS[9] = #20000 1'b0;
	ABUS[9] = #5000 1'b1;
	ABUS[9] = #15000 1'b0;
	ABUS[9] = #30000 1'b1;
	ABUS[9] = #5000 1'b0;
	ABUS[9] = #5000 1'b1;
	ABUS[9] = #30000 1'b0;
	ABUS[9] = #5000 1'b1;
	ABUS[9] = #10000 1'b0;
	ABUS[9] = #15000 1'b1;
	ABUS[9] = #5000 1'b0;
	ABUS[9] = #10000 1'b1;
	ABUS[9] = #15000 1'b0;
	ABUS[9] = #15000 1'b1;
	ABUS[9] = #10000 1'b0;
	ABUS[9] = #10000 1'b1;
	ABUS[9] = #5000 1'b0;
	ABUS[9] = #10000 1'b1;
	ABUS[9] = #10000 1'b0;
	ABUS[9] = #20000 1'b1;
	ABUS[9] = #5000 1'b0;
	ABUS[9] = #5000 1'b1;
	ABUS[9] = #5000 1'b0;
	ABUS[9] = #10000 1'b1;
	ABUS[9] = #5000 1'b0;
	ABUS[9] = #10000 1'b1;
	ABUS[9] = #15000 1'b0;
	ABUS[9] = #5000 1'b1;
	ABUS[9] = #25000 1'b0;
	ABUS[9] = #10000 1'b1;
	ABUS[9] = #5000 1'b0;
	ABUS[9] = #5000 1'b1;
	ABUS[9] = #5000 1'b0;
	ABUS[9] = #5000 1'b1;
	ABUS[9] = #40000 1'b0;
	ABUS[9] = #10000 1'b1;
	ABUS[9] = #5000 1'b0;
	ABUS[9] = #5000 1'b1;
	ABUS[9] = #10000 1'b0;
	ABUS[9] = #15000 1'b1;
	ABUS[9] = #5000 1'b0;
	ABUS[9] = #5000 1'b1;
	ABUS[9] = #5000 1'b0;
	ABUS[9] = #10000 1'b1;
	ABUS[9] = #10000 1'b0;
	ABUS[9] = #20000 1'b1;
	ABUS[9] = #5000 1'b0;
	ABUS[9] = #25000 1'b1;
	ABUS[9] = #5000 1'b0;
	ABUS[9] = #10000 1'b1;
	ABUS[9] = #10000 1'b0;
	ABUS[9] = #10000 1'b1;
	ABUS[9] = #5000 1'b0;
	ABUS[9] = #10000 1'b1;
	ABUS[9] = #15000 1'b0;
	ABUS[9] = #5000 1'b1;
	ABUS[9] = #10000 1'b0;
	ABUS[9] = #10000 1'b1;
	ABUS[9] = #10000 1'b0;
	ABUS[9] = #5000 1'b1;
	ABUS[9] = #5000 1'b0;
	ABUS[9] = #5000 1'b1;
	ABUS[9] = #5000 1'b0;
	ABUS[9] = #5000 1'b1;
	ABUS[9] = #5000 1'b0;
	ABUS[9] = #5000 1'b1;
	ABUS[9] = #10000 1'b0;
	ABUS[9] = #5000 1'b1;
	ABUS[9] = #10000 1'b0;
	ABUS[9] = #5000 1'b1;
	ABUS[9] = #10000 1'b0;
	ABUS[9] = #15000 1'b1;
	ABUS[9] = #10000 1'b0;
	ABUS[9] = #15000 1'b1;
	ABUS[9] = #5000 1'b0;
	ABUS[9] = #5000 1'b1;
	ABUS[9] = #5000 1'b0;
	ABUS[9] = #20000 1'b1;
	ABUS[9] = #5000 1'b0;
	ABUS[9] = #20000 1'b1;
	ABUS[9] = #5000 1'b0;
	ABUS[9] = #5000 1'b1;
	ABUS[9] = #15000 1'b0;
	ABUS[9] = #5000 1'b1;
	ABUS[9] = #5000 1'b0;
	ABUS[9] = #20000 1'b1;
	ABUS[9] = #40000 1'b0;
	ABUS[9] = #10000 1'b1;
	ABUS[9] = #10000 1'b0;
	ABUS[9] = #15000 1'b1;
	ABUS[9] = #10000 1'b0;
	ABUS[9] = #10000 1'b1;
	ABUS[9] = #15000 1'b0;
	ABUS[9] = #10000 1'b1;
end 
// ABUS[ 8 ]
initial
begin
	ABUS[8] = 1'b1;
	ABUS[8] = #10000 1'b0;
	ABUS[8] = #5000 1'b1;
	ABUS[8] = #10000 1'b0;
	ABUS[8] = #5000 1'b1;
	ABUS[8] = #5000 1'b0;
	ABUS[8] = #15000 1'b1;
	ABUS[8] = #5000 1'b0;
	ABUS[8] = #15000 1'b1;
	ABUS[8] = #5000 1'b0;
	ABUS[8] = #10000 1'b1;
	ABUS[8] = #10000 1'b0;
	ABUS[8] = #5000 1'b1;
	ABUS[8] = #10000 1'b0;
	ABUS[8] = #5000 1'b1;
	ABUS[8] = #5000 1'b0;
	ABUS[8] = #5000 1'b1;
	ABUS[8] = #10000 1'b0;
	ABUS[8] = #5000 1'b1;
	ABUS[8] = #10000 1'b0;
	ABUS[8] = #15000 1'b1;
	ABUS[8] = #5000 1'b0;
	ABUS[8] = #5000 1'b1;
	ABUS[8] = #10000 1'b0;
	ABUS[8] = #15000 1'b1;
	ABUS[8] = #5000 1'b0;
	ABUS[8] = #5000 1'b1;
	ABUS[8] = #15000 1'b0;
	ABUS[8] = #5000 1'b1;
	ABUS[8] = #15000 1'b0;
	ABUS[8] = #10000 1'b1;
	ABUS[8] = #10000 1'b0;
	ABUS[8] = #5000 1'b1;
	ABUS[8] = #30000 1'b0;
	ABUS[8] = #10000 1'b1;
	ABUS[8] = #25000 1'b0;
	ABUS[8] = #20000 1'b1;
	ABUS[8] = #5000 1'b0;
	ABUS[8] = #5000 1'b1;
	ABUS[8] = #5000 1'b0;
	ABUS[8] = #5000 1'b1;
	ABUS[8] = #5000 1'b0;
	ABUS[8] = #5000 1'b1;
	ABUS[8] = #5000 1'b0;
	ABUS[8] = #15000 1'b1;
	ABUS[8] = #5000 1'b0;
	ABUS[8] = #15000 1'b1;
	ABUS[8] = #15000 1'b0;
	ABUS[8] = #5000 1'b1;
	ABUS[8] = #5000 1'b0;
	ABUS[8] = #10000 1'b1;
	ABUS[8] = #15000 1'b0;
	ABUS[8] = #10000 1'b1;
	ABUS[8] = #15000 1'b0;
	ABUS[8] = #25000 1'b1;
	ABUS[8] = #10000 1'b0;
	ABUS[8] = #5000 1'b1;
	ABUS[8] = #10000 1'b0;
	ABUS[8] = #5000 1'b1;
	ABUS[8] = #10000 1'b0;
	ABUS[8] = #10000 1'b1;
	ABUS[8] = #5000 1'b0;
	ABUS[8] = #5000 1'b1;
	ABUS[8] = #15000 1'b0;
	ABUS[8] = #15000 1'b1;
	ABUS[8] = #15000 1'b0;
	ABUS[8] = #5000 1'b1;
	ABUS[8] = #15000 1'b0;
	ABUS[8] = #15000 1'b1;
	ABUS[8] = #35000 1'b0;
	ABUS[8] = #15000 1'b1;
	ABUS[8] = #5000 1'b0;
	ABUS[8] = #15000 1'b1;
	ABUS[8] = #30000 1'b0;
	ABUS[8] = #5000 1'b1;
	ABUS[8] = #10000 1'b0;
	ABUS[8] = #5000 1'b1;
	ABUS[8] = #5000 1'b0;
	ABUS[8] = #5000 1'b1;
	ABUS[8] = #10000 1'b0;
	ABUS[8] = #15000 1'b1;
	ABUS[8] = #10000 1'b0;
	ABUS[8] = #10000 1'b1;
	ABUS[8] = #5000 1'b0;
	ABUS[8] = #15000 1'b1;
	ABUS[8] = #5000 1'b0;
	ABUS[8] = #5000 1'b1;
	ABUS[8] = #5000 1'b0;
	ABUS[8] = #15000 1'b1;
	ABUS[8] = #5000 1'b0;
	ABUS[8] = #5000 1'b1;
	ABUS[8] = #10000 1'b0;
	ABUS[8] = #5000 1'b1;
	ABUS[8] = #10000 1'b0;
	ABUS[8] = #5000 1'b1;
	ABUS[8] = #5000 1'b0;
	ABUS[8] = #10000 1'b1;
	ABUS[8] = #5000 1'b0;
	ABUS[8] = #10000 1'b1;
	ABUS[8] = #5000 1'b0;
	ABUS[8] = #15000 1'b1;
	ABUS[8] = #5000 1'b0;
end 
// ABUS[ 7 ]
initial
begin
	ABUS[7] = 1'b0;
	ABUS[7] = #5000 1'b1;
	ABUS[7] = #5000 1'b0;
	ABUS[7] = #5000 1'b1;
	ABUS[7] = #5000 1'b0;
	ABUS[7] = #5000 1'b1;
	ABUS[7] = #10000 1'b0;
	ABUS[7] = #15000 1'b1;
	ABUS[7] = #5000 1'b0;
	ABUS[7] = #5000 1'b1;
	ABUS[7] = #5000 1'b0;
	ABUS[7] = #5000 1'b1;
	ABUS[7] = #5000 1'b0;
	ABUS[7] = #5000 1'b1;
	ABUS[7] = #15000 1'b0;
	ABUS[7] = #15000 1'b1;
	ABUS[7] = #5000 1'b0;
	ABUS[7] = #15000 1'b1;
	ABUS[7] = #5000 1'b0;
	ABUS[7] = #10000 1'b1;
	ABUS[7] = #15000 1'b0;
	ABUS[7] = #10000 1'b1;
	ABUS[7] = #5000 1'b0;
	ABUS[7] = #5000 1'b1;
	ABUS[7] = #5000 1'b0;
	ABUS[7] = #5000 1'b1;
	ABUS[7] = #10000 1'b0;
	ABUS[7] = #10000 1'b1;
	ABUS[7] = #15000 1'b0;
	ABUS[7] = #30000 1'b1;
	ABUS[7] = #35000 1'b0;
	ABUS[7] = #15000 1'b1;
	ABUS[7] = #10000 1'b0;
	ABUS[7] = #5000 1'b1;
	ABUS[7] = #5000 1'b0;
	ABUS[7] = #5000 1'b1;
	ABUS[7] = #10000 1'b0;
	ABUS[7] = #15000 1'b1;
	ABUS[7] = #5000 1'b0;
	ABUS[7] = #5000 1'b1;
	ABUS[7] = #5000 1'b0;
	ABUS[7] = #5000 1'b1;
	ABUS[7] = #10000 1'b0;
	ABUS[7] = #30000 1'b1;
	ABUS[7] = #30000 1'b0;
	ABUS[7] = #10000 1'b1;
	ABUS[7] = #5000 1'b0;
	ABUS[7] = #10000 1'b1;
	ABUS[7] = #20000 1'b0;
	ABUS[7] = #35000 1'b1;
	ABUS[7] = #5000 1'b0;
	ABUS[7] = #20000 1'b1;
	ABUS[7] = #20000 1'b0;
	ABUS[7] = #5000 1'b1;
	ABUS[7] = #5000 1'b0;
	ABUS[7] = #5000 1'b1;
	ABUS[7] = #5000 1'b0;
	ABUS[7] = #10000 1'b1;
	ABUS[7] = #5000 1'b0;
	ABUS[7] = #5000 1'b1;
	ABUS[7] = #5000 1'b0;
	ABUS[7] = #20000 1'b1;
	ABUS[7] = #5000 1'b0;
	ABUS[7] = #5000 1'b1;
	ABUS[7] = #15000 1'b0;
	ABUS[7] = #20000 1'b1;
	ABUS[7] = #10000 1'b0;
	ABUS[7] = #5000 1'b1;
	ABUS[7] = #5000 1'b0;
	ABUS[7] = #5000 1'b1;
	ABUS[7] = #5000 1'b0;
	ABUS[7] = #5000 1'b1;
	ABUS[7] = #5000 1'b0;
	ABUS[7] = #10000 1'b1;
	ABUS[7] = #10000 1'b0;
	ABUS[7] = #30000 1'b1;
	ABUS[7] = #10000 1'b0;
	ABUS[7] = #25000 1'b1;
	ABUS[7] = #30000 1'b0;
	ABUS[7] = #10000 1'b1;
	ABUS[7] = #5000 1'b0;
	ABUS[7] = #30000 1'b1;
	ABUS[7] = #15000 1'b0;
	ABUS[7] = #10000 1'b1;
	ABUS[7] = #10000 1'b0;
	ABUS[7] = #5000 1'b1;
	ABUS[7] = #10000 1'b0;
	ABUS[7] = #5000 1'b1;
	ABUS[7] = #10000 1'b0;
	ABUS[7] = #25000 1'b1;
	ABUS[7] = #5000 1'b0;
	ABUS[7] = #5000 1'b1;
	ABUS[7] = #5000 1'b0;
	ABUS[7] = #5000 1'b1;
end 
// ABUS[ 6 ]
initial
begin
	ABUS[6] = 1'b0;
	ABUS[6] = #5000 1'b1;
	ABUS[6] = #10000 1'b0;
	ABUS[6] = #5000 1'b1;
	ABUS[6] = #5000 1'b0;
	ABUS[6] = #5000 1'b1;
	ABUS[6] = #5000 1'b0;
	ABUS[6] = #15000 1'b1;
	ABUS[6] = #10000 1'b0;
	ABUS[6] = #10000 1'b1;
	ABUS[6] = #5000 1'b0;
	ABUS[6] = #10000 1'b1;
	ABUS[6] = #5000 1'b0;
	ABUS[6] = #10000 1'b1;
	ABUS[6] = #15000 1'b0;
	ABUS[6] = #5000 1'b1;
	ABUS[6] = #5000 1'b0;
	ABUS[6] = #5000 1'b1;
	ABUS[6] = #5000 1'b0;
	ABUS[6] = #15000 1'b1;
	ABUS[6] = #10000 1'b0;
	ABUS[6] = #5000 1'b1;
	ABUS[6] = #5000 1'b0;
	ABUS[6] = #25000 1'b1;
	ABUS[6] = #10000 1'b0;
	ABUS[6] = #5000 1'b1;
	ABUS[6] = #5000 1'b0;
	ABUS[6] = #15000 1'b1;
	ABUS[6] = #5000 1'b0;
	ABUS[6] = #5000 1'b1;
	ABUS[6] = #10000 1'b0;
	ABUS[6] = #10000 1'b1;
	ABUS[6] = #5000 1'b0;
	ABUS[6] = #5000 1'b1;
	ABUS[6] = #15000 1'b0;
	ABUS[6] = #10000 1'b1;
	ABUS[6] = #10000 1'b0;
	ABUS[6] = #5000 1'b1;
	ABUS[6] = #25000 1'b0;
	ABUS[6] = #5000 1'b1;
	ABUS[6] = #5000 1'b0;
	ABUS[6] = #15000 1'b1;
	ABUS[6] = #10000 1'b0;
	ABUS[6] = #5000 1'b1;
	ABUS[6] = #10000 1'b0;
	ABUS[6] = #25000 1'b1;
	ABUS[6] = #15000 1'b0;
	ABUS[6] = #5000 1'b1;
	ABUS[6] = #10000 1'b0;
	ABUS[6] = #15000 1'b1;
	ABUS[6] = #5000 1'b0;
	ABUS[6] = #15000 1'b1;
	ABUS[6] = #5000 1'b0;
	ABUS[6] = #10000 1'b1;
	ABUS[6] = #5000 1'b0;
	ABUS[6] = #10000 1'b1;
	ABUS[6] = #10000 1'b0;
	ABUS[6] = #5000 1'b1;
	ABUS[6] = #15000 1'b0;
	ABUS[6] = #5000 1'b1;
	ABUS[6] = #15000 1'b0;
	ABUS[6] = #10000 1'b1;
	ABUS[6] = #20000 1'b0;
	ABUS[6] = #10000 1'b1;
	ABUS[6] = #15000 1'b0;
	ABUS[6] = #10000 1'b1;
	ABUS[6] = #20000 1'b0;
	ABUS[6] = #5000 1'b1;
	ABUS[6] = #20000 1'b0;
	ABUS[6] = #5000 1'b1;
	ABUS[6] = #15000 1'b0;
	ABUS[6] = #10000 1'b1;
	ABUS[6] = #10000 1'b0;
	ABUS[6] = #5000 1'b1;
	ABUS[6] = #5000 1'b0;
	ABUS[6] = #10000 1'b1;
	ABUS[6] = #10000 1'b0;
	ABUS[6] = #10000 1'b1;
	ABUS[6] = #5000 1'b0;
	ABUS[6] = #5000 1'b1;
	ABUS[6] = #5000 1'b0;
	ABUS[6] = #5000 1'b1;
	ABUS[6] = #10000 1'b0;
	ABUS[6] = #5000 1'b1;
	ABUS[6] = #10000 1'b0;
	ABUS[6] = #5000 1'b1;
	ABUS[6] = #5000 1'b0;
	ABUS[6] = #10000 1'b1;
	ABUS[6] = #5000 1'b0;
	ABUS[6] = #15000 1'b1;
	ABUS[6] = #5000 1'b0;
	ABUS[6] = #5000 1'b1;
	ABUS[6] = #10000 1'b0;
	ABUS[6] = #35000 1'b1;
	ABUS[6] = #5000 1'b0;
	ABUS[6] = #20000 1'b1;
	ABUS[6] = #5000 1'b0;
	ABUS[6] = #5000 1'b1;
	ABUS[6] = #30000 1'b0;
	ABUS[6] = #25000 1'b1;
	ABUS[6] = #10000 1'b0;
	ABUS[6] = #5000 1'b1;
end 
// ABUS[ 5 ]
initial
begin
	ABUS[5] = 1'b1;
	ABUS[5] = #5000 1'b0;
	ABUS[5] = #5000 1'b1;
	ABUS[5] = #15000 1'b0;
	ABUS[5] = #5000 1'b1;
	ABUS[5] = #5000 1'b0;
	ABUS[5] = #30000 1'b1;
	ABUS[5] = #5000 1'b0;
	ABUS[5] = #20000 1'b1;
	ABUS[5] = #5000 1'b0;
	ABUS[5] = #5000 1'b1;
	ABUS[5] = #15000 1'b0;
	ABUS[5] = #10000 1'b1;
	ABUS[5] = #15000 1'b0;
	ABUS[5] = #5000 1'b1;
	ABUS[5] = #10000 1'b0;
	ABUS[5] = #20000 1'b1;
	ABUS[5] = #5000 1'b0;
	ABUS[5] = #5000 1'b1;
	ABUS[5] = #10000 1'b0;
	ABUS[5] = #10000 1'b1;
	ABUS[5] = #5000 1'b0;
	ABUS[5] = #15000 1'b1;
	ABUS[5] = #5000 1'b0;
	ABUS[5] = #15000 1'b1;
	ABUS[5] = #20000 1'b0;
	ABUS[5] = #15000 1'b1;
	ABUS[5] = #10000 1'b0;
	ABUS[5] = #20000 1'b1;
	ABUS[5] = #10000 1'b0;
	ABUS[5] = #5000 1'b1;
	ABUS[5] = #5000 1'b0;
	ABUS[5] = #15000 1'b1;
	ABUS[5] = #25000 1'b0;
	ABUS[5] = #5000 1'b1;
	ABUS[5] = #5000 1'b0;
	ABUS[5] = #5000 1'b1;
	ABUS[5] = #5000 1'b0;
	ABUS[5] = #5000 1'b1;
	ABUS[5] = #5000 1'b0;
	ABUS[5] = #5000 1'b1;
	ABUS[5] = #5000 1'b0;
	ABUS[5] = #5000 1'b1;
	ABUS[5] = #15000 1'b0;
	ABUS[5] = #5000 1'b1;
	ABUS[5] = #20000 1'b0;
	ABUS[5] = #25000 1'b1;
	ABUS[5] = #5000 1'b0;
	ABUS[5] = #5000 1'b1;
	ABUS[5] = #5000 1'b0;
	ABUS[5] = #10000 1'b1;
	ABUS[5] = #20000 1'b0;
	ABUS[5] = #5000 1'b1;
	ABUS[5] = #5000 1'b0;
	ABUS[5] = #5000 1'b1;
	ABUS[5] = #5000 1'b0;
	ABUS[5] = #5000 1'b1;
	ABUS[5] = #10000 1'b0;
	ABUS[5] = #10000 1'b1;
	ABUS[5] = #30000 1'b0;
	ABUS[5] = #10000 1'b1;
	ABUS[5] = #10000 1'b0;
	ABUS[5] = #15000 1'b1;
	ABUS[5] = #5000 1'b0;
	ABUS[5] = #15000 1'b1;
	ABUS[5] = #5000 1'b0;
	ABUS[5] = #5000 1'b1;
	ABUS[5] = #15000 1'b0;
	ABUS[5] = #5000 1'b1;
	ABUS[5] = #5000 1'b0;
	ABUS[5] = #5000 1'b1;
	ABUS[5] = #25000 1'b0;
	ABUS[5] = #5000 1'b1;
	ABUS[5] = #5000 1'b0;
	ABUS[5] = #5000 1'b1;
	ABUS[5] = #5000 1'b0;
	ABUS[5] = #5000 1'b1;
	ABUS[5] = #5000 1'b0;
	ABUS[5] = #5000 1'b1;
	ABUS[5] = #10000 1'b0;
	ABUS[5] = #5000 1'b1;
	ABUS[5] = #10000 1'b0;
	ABUS[5] = #15000 1'b1;
	ABUS[5] = #5000 1'b0;
	ABUS[5] = #15000 1'b1;
	ABUS[5] = #5000 1'b0;
	ABUS[5] = #5000 1'b1;
	ABUS[5] = #10000 1'b0;
	ABUS[5] = #5000 1'b1;
	ABUS[5] = #15000 1'b0;
	ABUS[5] = #10000 1'b1;
	ABUS[5] = #5000 1'b0;
	ABUS[5] = #5000 1'b1;
	ABUS[5] = #5000 1'b0;
	ABUS[5] = #5000 1'b1;
	ABUS[5] = #5000 1'b0;
	ABUS[5] = #5000 1'b1;
	ABUS[5] = #15000 1'b0;
	ABUS[5] = #30000 1'b1;
	ABUS[5] = #15000 1'b0;
	ABUS[5] = #5000 1'b1;
	ABUS[5] = #15000 1'b0;
	ABUS[5] = #5000 1'b1;
	ABUS[5] = #5000 1'b0;
	ABUS[5] = #5000 1'b1;
end 
// ABUS[ 4 ]
initial
begin
	ABUS[4] = 1'b1;
	ABUS[4] = #15000 1'b0;
	ABUS[4] = #5000 1'b1;
	ABUS[4] = #15000 1'b0;
	ABUS[4] = #40000 1'b1;
	ABUS[4] = #5000 1'b0;
	ABUS[4] = #10000 1'b1;
	ABUS[4] = #5000 1'b0;
	ABUS[4] = #5000 1'b1;
	ABUS[4] = #5000 1'b0;
	ABUS[4] = #10000 1'b1;
	ABUS[4] = #15000 1'b0;
	ABUS[4] = #10000 1'b1;
	ABUS[4] = #20000 1'b0;
	ABUS[4] = #10000 1'b1;
	ABUS[4] = #5000 1'b0;
	ABUS[4] = #10000 1'b1;
	ABUS[4] = #10000 1'b0;
	ABUS[4] = #20000 1'b1;
	ABUS[4] = #15000 1'b0;
	ABUS[4] = #5000 1'b1;
	ABUS[4] = #10000 1'b0;
	ABUS[4] = #10000 1'b1;
	ABUS[4] = #5000 1'b0;
	ABUS[4] = #10000 1'b1;
	ABUS[4] = #20000 1'b0;
	ABUS[4] = #10000 1'b1;
	ABUS[4] = #5000 1'b0;
	ABUS[4] = #5000 1'b1;
	ABUS[4] = #5000 1'b0;
	ABUS[4] = #15000 1'b1;
	ABUS[4] = #5000 1'b0;
	ABUS[4] = #5000 1'b1;
	ABUS[4] = #5000 1'b0;
	ABUS[4] = #10000 1'b1;
	ABUS[4] = #20000 1'b0;
	ABUS[4] = #5000 1'b1;
	ABUS[4] = #10000 1'b0;
	ABUS[4] = #10000 1'b1;
	ABUS[4] = #15000 1'b0;
	ABUS[4] = #5000 1'b1;
	ABUS[4] = #5000 1'b0;
	ABUS[4] = #15000 1'b1;
	ABUS[4] = #15000 1'b0;
	ABUS[4] = #5000 1'b1;
	ABUS[4] = #5000 1'b0;
	ABUS[4] = #5000 1'b1;
	ABUS[4] = #15000 1'b0;
	ABUS[4] = #5000 1'b1;
	ABUS[4] = #15000 1'b0;
	ABUS[4] = #5000 1'b1;
	ABUS[4] = #10000 1'b0;
	ABUS[4] = #5000 1'b1;
	ABUS[4] = #10000 1'b0;
	ABUS[4] = #10000 1'b1;
	ABUS[4] = #35000 1'b0;
	ABUS[4] = #5000 1'b1;
	ABUS[4] = #10000 1'b0;
	ABUS[4] = #5000 1'b1;
	ABUS[4] = #5000 1'b0;
	ABUS[4] = #10000 1'b1;
	ABUS[4] = #20000 1'b0;
	ABUS[4] = #5000 1'b1;
	ABUS[4] = #5000 1'b0;
	ABUS[4] = #10000 1'b1;
	ABUS[4] = #5000 1'b0;
	ABUS[4] = #10000 1'b1;
	ABUS[4] = #5000 1'b0;
	ABUS[4] = #5000 1'b1;
	ABUS[4] = #20000 1'b0;
	ABUS[4] = #20000 1'b1;
	ABUS[4] = #5000 1'b0;
	ABUS[4] = #5000 1'b1;
	ABUS[4] = #15000 1'b0;
	ABUS[4] = #10000 1'b1;
	ABUS[4] = #10000 1'b0;
	ABUS[4] = #5000 1'b1;
	ABUS[4] = #5000 1'b0;
	ABUS[4] = #30000 1'b1;
	ABUS[4] = #10000 1'b0;
	ABUS[4] = #5000 1'b1;
	ABUS[4] = #5000 1'b0;
	ABUS[4] = #15000 1'b1;
	ABUS[4] = #5000 1'b0;
	ABUS[4] = #10000 1'b1;
	ABUS[4] = #5000 1'b0;
	ABUS[4] = #5000 1'b1;
	ABUS[4] = #5000 1'b0;
	ABUS[4] = #5000 1'b1;
	ABUS[4] = #10000 1'b0;
	ABUS[4] = #5000 1'b1;
	ABUS[4] = #30000 1'b0;
	ABUS[4] = #10000 1'b1;
	ABUS[4] = #10000 1'b0;
	ABUS[4] = #5000 1'b1;
	ABUS[4] = #15000 1'b0;
	ABUS[4] = #5000 1'b1;
	ABUS[4] = #10000 1'b0;
	ABUS[4] = #10000 1'b1;
end 
// ABUS[ 3 ]
initial
begin
	ABUS[3] = 1'b0;
	ABUS[3] = #25000 1'b1;
	ABUS[3] = #10000 1'b0;
	ABUS[3] = #20000 1'b1;
	ABUS[3] = #5000 1'b0;
	ABUS[3] = #5000 1'b1;
	ABUS[3] = #5000 1'b0;
	ABUS[3] = #5000 1'b1;
	ABUS[3] = #20000 1'b0;
	ABUS[3] = #5000 1'b1;
	ABUS[3] = #15000 1'b0;
	ABUS[3] = #5000 1'b1;
	ABUS[3] = #25000 1'b0;
	ABUS[3] = #40000 1'b1;
	ABUS[3] = #15000 1'b0;
	ABUS[3] = #10000 1'b1;
	ABUS[3] = #30000 1'b0;
	ABUS[3] = #5000 1'b1;
	ABUS[3] = #10000 1'b0;
	ABUS[3] = #5000 1'b1;
	ABUS[3] = #10000 1'b0;
	ABUS[3] = #10000 1'b1;
	ABUS[3] = #5000 1'b0;
	ABUS[3] = #5000 1'b1;
	ABUS[3] = #20000 1'b0;
	ABUS[3] = #5000 1'b1;
	ABUS[3] = #5000 1'b0;
	ABUS[3] = #5000 1'b1;
	ABUS[3] = #30000 1'b0;
	ABUS[3] = #5000 1'b1;
	ABUS[3] = #10000 1'b0;
	ABUS[3] = #25000 1'b1;
	ABUS[3] = #15000 1'b0;
	ABUS[3] = #10000 1'b1;
	ABUS[3] = #5000 1'b0;
	ABUS[3] = #10000 1'b1;
	ABUS[3] = #5000 1'b0;
	ABUS[3] = #5000 1'b1;
	ABUS[3] = #10000 1'b0;
	ABUS[3] = #10000 1'b1;
	ABUS[3] = #5000 1'b0;
	ABUS[3] = #10000 1'b1;
	ABUS[3] = #5000 1'b0;
	ABUS[3] = #5000 1'b1;
	ABUS[3] = #5000 1'b0;
	ABUS[3] = #5000 1'b1;
	ABUS[3] = #5000 1'b0;
	ABUS[3] = #10000 1'b1;
	ABUS[3] = #5000 1'b0;
	ABUS[3] = #5000 1'b1;
	ABUS[3] = #5000 1'b0;
	ABUS[3] = #10000 1'b1;
	ABUS[3] = #10000 1'b0;
	ABUS[3] = #5000 1'b1;
	ABUS[3] = #5000 1'b0;
	ABUS[3] = #5000 1'b1;
	ABUS[3] = #10000 1'b0;
	ABUS[3] = #10000 1'b1;
	ABUS[3] = #5000 1'b0;
	ABUS[3] = #15000 1'b1;
	ABUS[3] = #5000 1'b0;
	ABUS[3] = #5000 1'b1;
	ABUS[3] = #10000 1'b0;
	ABUS[3] = #10000 1'b1;
	ABUS[3] = #10000 1'b0;
	ABUS[3] = #10000 1'b1;
	ABUS[3] = #20000 1'b0;
	ABUS[3] = #5000 1'b1;
	ABUS[3] = #10000 1'b0;
	ABUS[3] = #10000 1'b1;
	ABUS[3] = #20000 1'b0;
	ABUS[3] = #15000 1'b1;
	ABUS[3] = #5000 1'b0;
	ABUS[3] = #10000 1'b1;
	ABUS[3] = #15000 1'b0;
	ABUS[3] = #5000 1'b1;
	ABUS[3] = #5000 1'b0;
	ABUS[3] = #10000 1'b1;
	ABUS[3] = #10000 1'b0;
	ABUS[3] = #20000 1'b1;
	ABUS[3] = #15000 1'b0;
	ABUS[3] = #10000 1'b1;
	ABUS[3] = #5000 1'b0;
	ABUS[3] = #20000 1'b1;
	ABUS[3] = #5000 1'b0;
	ABUS[3] = #5000 1'b1;
	ABUS[3] = #10000 1'b0;
	ABUS[3] = #5000 1'b1;
	ABUS[3] = #15000 1'b0;
	ABUS[3] = #5000 1'b1;
	ABUS[3] = #10000 1'b0;
	ABUS[3] = #5000 1'b1;
	ABUS[3] = #5000 1'b0;
	ABUS[3] = #10000 1'b1;
	ABUS[3] = #5000 1'b0;
	ABUS[3] = #10000 1'b1;
	ABUS[3] = #5000 1'b0;
	ABUS[3] = #5000 1'b1;
end 
// ABUS[ 2 ]
initial
begin
	ABUS[2] = 1'b0;
	ABUS[2] = #5000 1'b1;
	ABUS[2] = #5000 1'b0;
	ABUS[2] = #5000 1'b1;
	ABUS[2] = #5000 1'b0;
	ABUS[2] = #10000 1'b1;
	ABUS[2] = #10000 1'b0;
	ABUS[2] = #10000 1'b1;
	ABUS[2] = #5000 1'b0;
	ABUS[2] = #5000 1'b1;
	ABUS[2] = #10000 1'b0;
	ABUS[2] = #30000 1'b1;
	ABUS[2] = #5000 1'b0;
	ABUS[2] = #5000 1'b1;
	ABUS[2] = #5000 1'b0;
	ABUS[2] = #5000 1'b1;
	ABUS[2] = #5000 1'b0;
	ABUS[2] = #5000 1'b1;
	ABUS[2] = #10000 1'b0;
	ABUS[2] = #25000 1'b1;
	ABUS[2] = #15000 1'b0;
	ABUS[2] = #5000 1'b1;
	ABUS[2] = #5000 1'b0;
	ABUS[2] = #5000 1'b1;
	ABUS[2] = #20000 1'b0;
	ABUS[2] = #5000 1'b1;
	ABUS[2] = #5000 1'b0;
	ABUS[2] = #10000 1'b1;
	ABUS[2] = #5000 1'b0;
	ABUS[2] = #30000 1'b1;
	ABUS[2] = #15000 1'b0;
	ABUS[2] = #10000 1'b1;
	ABUS[2] = #5000 1'b0;
	ABUS[2] = #5000 1'b1;
	ABUS[2] = #10000 1'b0;
	ABUS[2] = #35000 1'b1;
	ABUS[2] = #10000 1'b0;
	ABUS[2] = #15000 1'b1;
	ABUS[2] = #5000 1'b0;
	ABUS[2] = #5000 1'b1;
	ABUS[2] = #5000 1'b0;
	ABUS[2] = #5000 1'b1;
	ABUS[2] = #5000 1'b0;
	ABUS[2] = #5000 1'b1;
	ABUS[2] = #5000 1'b0;
	ABUS[2] = #15000 1'b1;
	ABUS[2] = #10000 1'b0;
	ABUS[2] = #10000 1'b1;
	ABUS[2] = #5000 1'b0;
	ABUS[2] = #5000 1'b1;
	ABUS[2] = #5000 1'b0;
	ABUS[2] = #15000 1'b1;
	ABUS[2] = #5000 1'b0;
	ABUS[2] = #5000 1'b1;
	ABUS[2] = #5000 1'b0;
	ABUS[2] = #20000 1'b1;
	ABUS[2] = #5000 1'b0;
	ABUS[2] = #15000 1'b1;
	ABUS[2] = #20000 1'b0;
	ABUS[2] = #5000 1'b1;
	ABUS[2] = #5000 1'b0;
	ABUS[2] = #10000 1'b1;
	ABUS[2] = #10000 1'b0;
	ABUS[2] = #10000 1'b1;
	ABUS[2] = #5000 1'b0;
	ABUS[2] = #15000 1'b1;
	ABUS[2] = #10000 1'b0;
	ABUS[2] = #10000 1'b1;
	ABUS[2] = #15000 1'b0;
	ABUS[2] = #5000 1'b1;
	ABUS[2] = #5000 1'b0;
	ABUS[2] = #5000 1'b1;
	ABUS[2] = #5000 1'b0;
	ABUS[2] = #15000 1'b1;
	ABUS[2] = #10000 1'b0;
	ABUS[2] = #10000 1'b1;
	ABUS[2] = #15000 1'b0;
	ABUS[2] = #5000 1'b1;
	ABUS[2] = #5000 1'b0;
	ABUS[2] = #20000 1'b1;
	ABUS[2] = #5000 1'b0;
	ABUS[2] = #5000 1'b1;
	ABUS[2] = #10000 1'b0;
	ABUS[2] = #5000 1'b1;
	ABUS[2] = #5000 1'b0;
	ABUS[2] = #10000 1'b1;
	ABUS[2] = #5000 1'b0;
	ABUS[2] = #5000 1'b1;
	ABUS[2] = #10000 1'b0;
	ABUS[2] = #20000 1'b1;
	ABUS[2] = #10000 1'b0;
	ABUS[2] = #15000 1'b1;
	ABUS[2] = #5000 1'b0;
	ABUS[2] = #5000 1'b1;
	ABUS[2] = #15000 1'b0;
	ABUS[2] = #5000 1'b1;
	ABUS[2] = #20000 1'b0;
	ABUS[2] = #5000 1'b1;
	ABUS[2] = #5000 1'b0;
	ABUS[2] = #5000 1'b1;
	ABUS[2] = #10000 1'b0;
	ABUS[2] = #10000 1'b1;
	ABUS[2] = #10000 1'b0;
	ABUS[2] = #5000 1'b1;
	ABUS[2] = #10000 1'b0;
	ABUS[2] = #5000 1'b1;
	ABUS[2] = #5000 1'b0;
	ABUS[2] = #5000 1'b1;
	ABUS[2] = #10000 1'b0;
	ABUS[2] = #5000 1'b1;
end 
// ABUS[ 1 ]
initial
begin
	ABUS[1] = 1'b1;
	ABUS[1] = #15000 1'b0;
	ABUS[1] = #15000 1'b1;
	ABUS[1] = #5000 1'b0;
	ABUS[1] = #15000 1'b1;
	ABUS[1] = #20000 1'b0;
	ABUS[1] = #10000 1'b1;
	ABUS[1] = #10000 1'b0;
	ABUS[1] = #10000 1'b1;
	ABUS[1] = #15000 1'b0;
	ABUS[1] = #5000 1'b1;
	ABUS[1] = #5000 1'b0;
	ABUS[1] = #5000 1'b1;
	ABUS[1] = #5000 1'b0;
	ABUS[1] = #30000 1'b1;
	ABUS[1] = #10000 1'b0;
	ABUS[1] = #5000 1'b1;
	ABUS[1] = #5000 1'b0;
	ABUS[1] = #10000 1'b1;
	ABUS[1] = #20000 1'b0;
	ABUS[1] = #15000 1'b1;
	ABUS[1] = #5000 1'b0;
	ABUS[1] = #10000 1'b1;
	ABUS[1] = #5000 1'b0;
	ABUS[1] = #20000 1'b1;
	ABUS[1] = #5000 1'b0;
	ABUS[1] = #20000 1'b1;
	ABUS[1] = #5000 1'b0;
	ABUS[1] = #10000 1'b1;
	ABUS[1] = #5000 1'b0;
	ABUS[1] = #5000 1'b1;
	ABUS[1] = #5000 1'b0;
	ABUS[1] = #5000 1'b1;
	ABUS[1] = #5000 1'b0;
	ABUS[1] = #5000 1'b1;
	ABUS[1] = #5000 1'b0;
	ABUS[1] = #10000 1'b1;
	ABUS[1] = #5000 1'b0;
	ABUS[1] = #5000 1'b1;
	ABUS[1] = #10000 1'b0;
	ABUS[1] = #5000 1'b1;
	ABUS[1] = #5000 1'b0;
	ABUS[1] = #5000 1'b1;
	ABUS[1] = #10000 1'b0;
	ABUS[1] = #5000 1'b1;
	ABUS[1] = #25000 1'b0;
	ABUS[1] = #10000 1'b1;
	ABUS[1] = #5000 1'b0;
	ABUS[1] = #5000 1'b1;
	ABUS[1] = #15000 1'b0;
	ABUS[1] = #5000 1'b1;
	ABUS[1] = #20000 1'b0;
	ABUS[1] = #20000 1'b1;
	ABUS[1] = #10000 1'b0;
	ABUS[1] = #10000 1'b1;
	ABUS[1] = #10000 1'b0;
	ABUS[1] = #5000 1'b1;
	ABUS[1] = #25000 1'b0;
	ABUS[1] = #5000 1'b1;
	ABUS[1] = #5000 1'b0;
	ABUS[1] = #5000 1'b1;
	ABUS[1] = #5000 1'b0;
	ABUS[1] = #10000 1'b1;
	ABUS[1] = #30000 1'b0;
	ABUS[1] = #10000 1'b1;
	ABUS[1] = #15000 1'b0;
	ABUS[1] = #10000 1'b1;
	ABUS[1] = #5000 1'b0;
	ABUS[1] = #5000 1'b1;
	ABUS[1] = #15000 1'b0;
	ABUS[1] = #5000 1'b1;
	ABUS[1] = #25000 1'b0;
	ABUS[1] = #10000 1'b1;
	ABUS[1] = #5000 1'b0;
	ABUS[1] = #5000 1'b1;
	ABUS[1] = #5000 1'b0;
	ABUS[1] = #5000 1'b1;
	ABUS[1] = #5000 1'b0;
	ABUS[1] = #5000 1'b1;
	ABUS[1] = #15000 1'b0;
	ABUS[1] = #10000 1'b1;
	ABUS[1] = #5000 1'b0;
	ABUS[1] = #10000 1'b1;
	ABUS[1] = #5000 1'b0;
	ABUS[1] = #30000 1'b1;
	ABUS[1] = #20000 1'b0;
	ABUS[1] = #20000 1'b1;
	ABUS[1] = #10000 1'b0;
	ABUS[1] = #10000 1'b1;
	ABUS[1] = #10000 1'b0;
	ABUS[1] = #20000 1'b1;
	ABUS[1] = #20000 1'b0;
	ABUS[1] = #10000 1'b1;
	ABUS[1] = #15000 1'b0;
end 
// ABUS[ 0 ]
initial
begin
	ABUS[0] = 1'b1;
	ABUS[0] = #15000 1'b0;
	ABUS[0] = #10000 1'b1;
	ABUS[0] = #15000 1'b0;
	ABUS[0] = #25000 1'b1;
	ABUS[0] = #5000 1'b0;
	ABUS[0] = #20000 1'b1;
	ABUS[0] = #5000 1'b0;
	ABUS[0] = #10000 1'b1;
	ABUS[0] = #10000 1'b0;
	ABUS[0] = #5000 1'b1;
	ABUS[0] = #5000 1'b0;
	ABUS[0] = #10000 1'b1;
	ABUS[0] = #5000 1'b0;
	ABUS[0] = #10000 1'b1;
	ABUS[0] = #5000 1'b0;
	ABUS[0] = #5000 1'b1;
	ABUS[0] = #5000 1'b0;
	ABUS[0] = #30000 1'b1;
	ABUS[0] = #15000 1'b0;
	ABUS[0] = #10000 1'b1;
	ABUS[0] = #5000 1'b0;
	ABUS[0] = #10000 1'b1;
	ABUS[0] = #15000 1'b0;
	ABUS[0] = #10000 1'b1;
	ABUS[0] = #10000 1'b0;
	ABUS[0] = #5000 1'b1;
	ABUS[0] = #5000 1'b0;
	ABUS[0] = #15000 1'b1;
	ABUS[0] = #10000 1'b0;
	ABUS[0] = #5000 1'b1;
	ABUS[0] = #5000 1'b0;
	ABUS[0] = #40000 1'b1;
	ABUS[0] = #10000 1'b0;
	ABUS[0] = #10000 1'b1;
	ABUS[0] = #5000 1'b0;
	ABUS[0] = #5000 1'b1;
	ABUS[0] = #5000 1'b0;
	ABUS[0] = #5000 1'b1;
	ABUS[0] = #15000 1'b0;
	ABUS[0] = #5000 1'b1;
	ABUS[0] = #5000 1'b0;
	ABUS[0] = #25000 1'b1;
	ABUS[0] = #5000 1'b0;
	ABUS[0] = #10000 1'b1;
	ABUS[0] = #10000 1'b0;
	ABUS[0] = #20000 1'b1;
	ABUS[0] = #10000 1'b0;
	ABUS[0] = #5000 1'b1;
	ABUS[0] = #5000 1'b0;
	ABUS[0] = #5000 1'b1;
	ABUS[0] = #10000 1'b0;
	ABUS[0] = #5000 1'b1;
	ABUS[0] = #5000 1'b0;
	ABUS[0] = #5000 1'b1;
	ABUS[0] = #5000 1'b0;
	ABUS[0] = #5000 1'b1;
	ABUS[0] = #10000 1'b0;
	ABUS[0] = #5000 1'b1;
	ABUS[0] = #20000 1'b0;
	ABUS[0] = #5000 1'b1;
	ABUS[0] = #15000 1'b0;
	ABUS[0] = #5000 1'b1;
	ABUS[0] = #5000 1'b0;
	ABUS[0] = #5000 1'b1;
	ABUS[0] = #35000 1'b0;
	ABUS[0] = #5000 1'b1;
	ABUS[0] = #10000 1'b0;
	ABUS[0] = #5000 1'b1;
	ABUS[0] = #15000 1'b0;
	ABUS[0] = #5000 1'b1;
	ABUS[0] = #15000 1'b0;
	ABUS[0] = #20000 1'b1;
	ABUS[0] = #5000 1'b0;
	ABUS[0] = #5000 1'b1;
	ABUS[0] = #5000 1'b0;
	ABUS[0] = #5000 1'b1;
	ABUS[0] = #10000 1'b0;
	ABUS[0] = #15000 1'b1;
	ABUS[0] = #25000 1'b0;
	ABUS[0] = #15000 1'b1;
	ABUS[0] = #15000 1'b0;
	ABUS[0] = #5000 1'b1;
	ABUS[0] = #10000 1'b0;
	ABUS[0] = #5000 1'b1;
	ABUS[0] = #5000 1'b0;
	ABUS[0] = #10000 1'b1;
	ABUS[0] = #10000 1'b0;
	ABUS[0] = #5000 1'b1;
	ABUS[0] = #15000 1'b0;
	ABUS[0] = #5000 1'b1;
	ABUS[0] = #5000 1'b0;
	ABUS[0] = #5000 1'b1;
	ABUS[0] = #5000 1'b0;
	ABUS[0] = #20000 1'b1;
	ABUS[0] = #15000 1'b0;
	ABUS[0] = #10000 1'b1;
	ABUS[0] = #10000 1'b0;
end 
// DBUS[ 31 ]
initial
begin
	DBUS[31] = 1'b1;
end 
// DBUS[ 30 ]
initial
begin
	DBUS[30] = 1'b1;
end 
// DBUS[ 29 ]
initial
begin
	DBUS[29] = 1'b1;
end 
// DBUS[ 28 ]
initial
begin
	DBUS[28] = 1'b1;
end 
// DBUS[ 27 ]
initial
begin
	DBUS[27] = 1'b1;
end 
// DBUS[ 26 ]
initial
begin
	DBUS[26] = 1'b1;
end 
// DBUS[ 25 ]
initial
begin
	DBUS[25] = 1'b1;
end 
// DBUS[ 24 ]
initial
begin
	DBUS[24] = 1'b1;
end 
// DBUS[ 23 ]
initial
begin
	DBUS[23] = 1'b1;
end 
// DBUS[ 22 ]
initial
begin
	DBUS[22] = 1'b1;
end 
// DBUS[ 21 ]
initial
begin
	DBUS[21] = 1'b1;
end 
// DBUS[ 20 ]
initial
begin
	DBUS[20] = 1'b1;
end 
// DBUS[ 19 ]
initial
begin
	DBUS[19] = 1'b1;
end 
// DBUS[ 18 ]
initial
begin
	DBUS[18] = 1'b1;
end 
// DBUS[ 17 ]
initial
begin
	DBUS[17] = 1'b1;
end 
// DBUS[ 16 ]
initial
begin
	DBUS[16] = 1'b1;
end 
// DBUS[ 15 ]
initial
begin
	DBUS[15] = 1'b1;
end 
// DBUS[ 14 ]
initial
begin
	DBUS[14] = 1'b1;
end 
// DBUS[ 13 ]
initial
begin
	DBUS[13] = 1'b1;
end 
// DBUS[ 12 ]
initial
begin
	DBUS[12] = 1'b1;
end 
// DBUS[ 11 ]
initial
begin
	DBUS[11] = 1'b1;
end 
// DBUS[ 10 ]
initial
begin
	DBUS[10] = 1'b1;
end 
// DBUS[ 9 ]
initial
begin
	DBUS[9] = 1'b1;
end 
// DBUS[ 8 ]
initial
begin
	DBUS[8] = 1'b1;
end 
// DBUS[ 7 ]
initial
begin
	DBUS[7] = 1'b1;
end 
// DBUS[ 6 ]
initial
begin
	DBUS[6] = 1'b1;
end 
// DBUS[ 5 ]
initial
begin
	DBUS[5] = 1'b1;
end 
// DBUS[ 4 ]
initial
begin
	DBUS[4] = 1'b1;
end 
// DBUS[ 3 ]
initial
begin
	DBUS[3] = 1'b1;
end 
// DBUS[ 2 ]
initial
begin
	DBUS[2] = 1'b1;
end 
// DBUS[ 1 ]
initial
begin
	DBUS[1] = 1'b1;
end 
// DBUS[ 0 ]
initial
begin
	DBUS[0] = 1'b1;
end 
// LEN[ 1 ]
initial
begin
	repeat(12)
	begin
		LEN[1] = 1'b0;
		LEN[1] = #40000 1'b1;
		# 40000;
	end
	LEN[1] = 1'b0;
end 
// LEN[ 0 ]
always
begin
	LEN[0] = 1'b0;
	LEN[0] = #20000 1'b1;
	#20000;
end 

// RD
initial
begin
	RD = 1'b1;
end 

// WR
initial
begin
	WR = 1'b1;
end 

sramif_vlg_sample_tst tb_sample (
	.ABUS(ABUS),
	.DBUS(DBUS),
	.LEN(LEN),
	.RD(RD),
	.WR(WR),
	.sampler_tx(sampler)
);

sramif_vlg_check_tst tb_out(
	.address(address),
	.byteena(byteena),
	.data(data),
	.rdd(rdd),
	.rden(rden),
	.shft8(shft8),
	.shft16(shft16),
	.wren(wren),
	.sampler_rx(sampler)
);
endmodule

